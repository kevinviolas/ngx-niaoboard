{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://konverso/lib/konverso.service.ts","ng://konverso/Sample/BotMessageSample.ts","ng://konverso/Sample/DotLoader.ts","ng://konverso/lib/konverso.component.ts","ng://konverso/lib/translate.service.ts","ng://konverso/lib/desktop-full-screen/desktop-full-screen.component.ts","ng://konverso/lib/first-visit/first-visit.component.ts","ng://konverso/lib/pipe/safe-html.pipe.ts","ng://konverso/lib/konverso.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","KonversoService","config","http","authentication","EventEmitter","firstVisit","AssistantMode","readyState","token","BehaviorSubject","_token","asObservable","lang","customData","emulationTrigger","buildHeaders","initInstance","send","query","replace","RegExp","_this","header","preparedData","buildQuery","options","headers","post","endpoint","Date","getTime","subscribe","data","Error","sendTriggerEmulation","catch","err","console","log","response","_a","input","bearer","HttpHeaders","Authorization","_auth","auth","defaultAssets","assets","ColorSet","user","locale","_b","InputPlaceHolder","PlaceHolder","InputNumberPlaceHolder","NumberPlaceHolder","CustomWelcome","BotInitMessage","Welcome","mustache.render","_c","_d","_e","_g","_f","FirstUsage","_j","_h","firstUsageStory","_k","_l","history_1","userId","guid","custom","getValue","trim","isSending","random","Math","floor","toString","substring","Inject","args","HttpClient","Injectable","BotMessageSample","timestamp","text","infoURL","context","suggestions","DotLoaderTemplate","color","KonversoComponent","service","_ready","ready","sended","showInput","disableUserInput","ngOnInit","LastUserInput","message","date","error","toISOString","triggerKbotResponse","medias","required_actions","LastBotAnswer","History","navigator","userAgent","match","isMobile","_isMobile","sendBotCommand","colorSet","emit","customWelcome","$event","Primary","NaN","parseInt","index","Android","BlackBerry","iOS","Opera","Windows","any","Output","Input","Component","selector","template","TranslateService","fr","GO","SEND","SELECT","en","translate","l","word","providedIn","DesktopFullScreenComponent","IsMobile","readySend","sendEvent","currentPlaceHolder","sendBtn","select","changed","botListening","showWrapper","showText","inputType","inputLimit","newMessage","messageCurrent","msgArray","botListeningTimer","anim_done","reloaded","ngOnChanges","setInterval","document","querySelectorAll","elems","length_1","temp","style","opacity","clearInterval","getElementById","includes","innerHTML","string","split","join","launchLoop","t2_1","setTimeout","timer","looper","shift","length_2","rep","className","userWriting","code","_send","endOfTopic","userData","userInput","toLocaleTimeString","language","hour","minute","scroll","scrollHeight","byPassUserInput","botdata","buttons","Array","from","classList","add","remove","FirstVisitComponent","position","current","go","clear","goTo","pos","start","SafeHtmlPipe","sanitizer","transform","bypassSecurityTrustHtml","DomSanitizer","Pipe","name","KonversoModule","parentModule","forRoot","ngModule","KonversoModule_1","providers","provide","useValue","type","Optional","SkipSelf","NgModule","declarations","imports","FormsModule","HttpClientModule","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {EventEmitter, Inject, Injectable} from '@angular/core';\nimport {ColorSet, DefaultAssets, KonversoInterface, KonversoQuery, KonversoUser} from '../interface/KonversoInterface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\nimport * as mustache from 'mustache';\n\n@Injectable()\nexport class KonversoService {\n    public authentication: EventEmitter<KonversoUser> = new EventEmitter<KonversoUser>();\n    public assets: DefaultAssets;\n    public firstVisit = false;\n    public firstUsageStory: string[];\n    public ColorSet: ColorSet;\n    public PlaceHolder: string[];\n    public NumberPlaceHolder: string[];\n    public AssistantMode = false;\n    public Welcome: string;\n    public readyState: boolean = false;\n    public locale: string;\n    private token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n    // tslint:disable-next-line:variable-name\n    private _token = this.token.asObservable();\n    private user: KonversoUser;\n    private header: HttpHeaders;\n    private endpoint: string;\n    public _auth: boolean;\n    public lang = new BehaviorSubject('');\n    public customData: BehaviorSubject<{ [key: string]: any }> = new BehaviorSubject<{ [key: string]: any }>(null);\n    public emulationTrigger: BehaviorSubject<any> = new BehaviorSubject(null);\n\n    constructor(@Inject('__NgxKonverso__') config: KonversoInterface, private http: HttpClient) {\n        this.buildHeaders();\n        this.initInstance(config);\n    }\n\n    /**\n     * Send Query To backend server and get a response\n     * @param query\n     */\n    public async send(query: string): Promise<string | any> {\n        return new Promise((resolve, reject) => {\n            if (query && query.replace(new RegExp(' ', 'g'), '')) {\n                if (this.header) {\n                    const preparedData = this.buildQuery(query);\n                    const options: any = {\n                        headers: this.header\n                    };\n                    this.http.post(this.endpoint + '?t=' + new Date().getTime(), preparedData, options)\n                        .subscribe((data: any) => {\n                            resolve(data);\n                        });\n                } else {\n                    reject(new Error('Header is not set, please provide a token though user setting or though module configuration'));\n                }\n            } else {\n                reject(new Error('Current input is empty, please try again'));\n            }\n        });\n    }\n\n    /**\n     * Emulate user entry Query To backend server and get a response\n     * @param query\n     */\n    public async sendTriggerEmulation(query: string): Promise<void> {\n        const response = await this.send(query).catch((err: any) => {\n            console.log('error trigger emulation', err);\n        });\n        if (response) {\n            this.emulationTrigger.next({input : query, ...response})\n        }\n    }\n\n    /**\n     * @private\n     * Generate Header for backend call\n     */\n    private buildHeaders() {\n        this._token.subscribe((token: string) => {\n            const bearer: string = 'Bearer ' + token;\n            this.header = new HttpHeaders({\n                //'Content-Type': 'application/json',\n                // 'Access-Control-Allow-Origin': window.location.origin,\n                'Authorization': bearer\n            });\n        });\n    }\n\n    /**\n     * @param config\n     * @private\n     * Initialize Data for User Instance\n     */\n    private initInstance(config: KonversoInterface) {\n        this._auth = !!config.auth;\n        if (config.endpoint) {\n            this.endpoint = config.endpoint;\n            if (config.AssistantMode) {\n                this.AssistantMode = config.AssistantMode;\n            }\n\n            if (config.defaultAssets) {\n                this.assets = config.defaultAssets;\n                if (config.defaultAssets.ColorSet) {\n                    this.ColorSet = config.defaultAssets.ColorSet;\n                }\n            }\n            if (config.auth) {\n                this.authentication.subscribe((user: KonversoUser) => {\n                    if (!user.lang && config.lang) {\n                        user.lang = config.lang;\n                    }\n                    this.locale = user?.lang;\n                    this.lang.next(this.locale);\n                    if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\n                        this.PlaceHolder = config.InputPlaceHolder[this.locale];\n                    }\n                    if (config.InputNumberPlaceHolder && config.InputNumberPlaceHolder[this.locale]) {\n                        this.NumberPlaceHolder = config.InputNumberPlaceHolder[this.locale];\n                    }\n                    if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\n                        this.Welcome = mustache.render(config.BotInitMessage.Welcome[this.locale], user);\n                    }\n                    if (user?.token) {\n                        this.token.next(user?.token);\n                    }\n                    if (user?.firstVisit) {\n                        this.firstVisit = true;\n                        delete user.firstVisit;\n                        if (config?.BotInitMessage?.FirstUsage &&\n                            this.locale &&\n                            config?.BotInitMessage?.FirstUsage[this.locale]) {\n                            this.firstUsageStory = [];\n                            for (const history of config.BotInitMessage.FirstUsage[this.locale]) {\n                                this.firstUsageStory.push(mustache.render(history, user));\n                            }\n                        }\n                    }\n                    this.user = user;\n                    this.readyState = true;\n                });\n            } else if (config.lang) {\n                this.locale = config.lang;\n                this.lang.next(this.locale);\n                if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\n                    this.PlaceHolder = config.InputPlaceHolder[this.locale];\n                }\n                if (config.InputNumberPlaceHolder && config.InputNumberPlaceHolder[this.locale]) {\n                    this.NumberPlaceHolder = config.InputNumberPlaceHolder[this.locale];\n                }\n                if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\n                    this.Welcome = config.BotInitMessage.Welcome[this.locale];\n                }\n                this.user = {\n                    userId: this.guid(),\n                    lang: config.lang\n                };\n                this.readyState = true;\n            }\n            if (config.token) {\n                this.token.next(config.token);\n            }\n        } else {\n            return new Error('Please provide endpoint');\n        }\n    }\n\n    /**\n     * @param query\n     * @private\n     * prepare set data to push to backend server\n     */\n    private buildQuery(query: string): KonversoQuery {\n        // @ts-ignore\n        const custom: any = this.customData.getValue();\n        return {\n            ...custom,\n            ...this.user,\n            query: query.replace(/\\s+/g, ' ').trim(),\n            isSending: true\n        };\n    }\n\n    /**\n     * @private\n     * Generate Random uniq Id for Konverso Instance\n     */\n    private guid() {\n        let random = () => {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        };\n        return random() + random() + '-' + random() + '-' + random() + '-' + random() + '-' + random() + random() + random();\n    }\n}\n","/***********************************************************\n **  @project ngx-konverso                              **\n **  @file BotMessageSample                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 02/04/2021                                         **\n ***********************************************************/\nimport {OpenChatBotResponse} from '../interface/KonversoInterface';\n\n\nexport const BotMessageSample : OpenChatBotResponse = {\n    query: null,\n    userId: null,\n    timestamp: 1617369777.976196,\n    text: null,\n    infoURL: '',\n    context: [],\n    suggestions: []\n};\n","/***********************************************************\n **  @project ngx-konverso                              **\n **  @file DotLoader                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 07/04/2021                                         **\n ***********************************************************/\n\n\nexport const DotLoaderTemplate = (color: string) => `<div class=\"loading-dots\">\n<div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  </div>`;\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {KonversoService} from './konverso.service';\nimport {ColorSet, DefaultAssets, KonversoAnswer, OpenChatBotResponse, UserInput} from '../interface/KonversoInterface';\nimport {BotMessageSample} from '../Sample/BotMessageSample';\nimport {DotLoaderTemplate} from '../Sample/DotLoader';\n\n// @ts-ignore\n@Component({\n    selector: 'ngx-konverso',\n    templateUrl: 'konverso.component.html',\n    styleUrls: ['../../assets/main.scss']\n})\nexport class KonversoComponent implements OnInit {\n    public _ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() sended: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Input() showInput = true;\n    public query: string;\n    public isMobile: boolean;\n    public assets: DefaultAssets;\n    public firstVisit: boolean;\n    public firstUsageStory: string[];\n    public AssistantMode = false;\n    public colorSet: ColorSet;\n    public History: (UserInput | OpenChatBotResponse)[];\n    public disableUserInput = false;\n    public LastUserInput: UserInput;\n    public LastBotAnswer: OpenChatBotResponse;\n    public PlaceHolder: string[];\n    public NumberPlaceHolder : string[];\n    public Welcome: string;\n\n    constructor(private service: KonversoService) {\n        if (service._auth) {\n            this.service.authentication.subscribe(() => {\n                this.ngOnInit();\n            })\n        }\n        this.service.emulationTrigger.subscribe((response: any) => {\n            console.log(response);\n            if (response) {\n                if (!this.LastUserInput) {\n                    this.LastUserInput = {\n                        message: '',\n                        date: '',\n                        error: null\n                    }\n                }\n                this.LastUserInput.message += ' ' + response.input;\n                this.LastUserInput.date = new Date().toISOString();\n                this.triggerKbotResponse(response);\n            }\n        })\n    }\n\n    private triggerKbotResponse(response: any): void {\n        if (response && response.response) {\n            if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\n                response.response.medias[0].required_actions.length) {\n                this.disableUserInput = true;\n            } else {\n                this.disableUserInput = false;\n            }\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        }\n    }\n\n    ngOnInit() {\n        console.log('user agent', navigator.userAgent, navigator.userAgent.match(/iPhone|iPad|iPod/i))\n        this.isMobile = this._isMobile();\n        this.assets = this.service.assets;\n        this.firstVisit = this.service.firstVisit;\n        this.firstUsageStory = this.service.firstUsageStory;\n        this.AssistantMode = this.service.AssistantMode;\n        this.PlaceHolder = this.service.PlaceHolder;\n        this.NumberPlaceHolder = this.service.NumberPlaceHolder;\n        this.Welcome = this.service.Welcome;\n        this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\n        this.History = [];\n        if (this.service.ColorSet) {\n            this.colorSet = this.service.ColorSet;\n        }\n        this._ready.subscribe((ready: boolean) => {\n            if (ready) {\n                this.firstVisit = false;\n                this.service.firstVisit = false;\n                this.ready.emit(ready);\n            }\n        });\n        if (this.Welcome) {\n            const customWelcome: OpenChatBotResponse = BotMessageSample;\n            customWelcome.text = this.Welcome;\n            this.LastBotAnswer = customWelcome;\n            this.History.push(customWelcome);\n        }\n    }\n\n    async send($event: UserInput) {\n        if ($event.message === 'exit') {\n            this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\n            return false;\n        }\n        this.sended.emit(true);\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\n        if (parseInt($event.message) == NaN) {\n            this.History.push($event);\n        }\n\n        console.log(parseInt($event.message));\n        if (this.AssistantMode) {\n            if (this.LastUserInput) {\n                if (parseInt($event.message) == NaN) {\n                    this.LastUserInput.message += ' ' + $event.message;\n                    this.LastUserInput.date = $event.date;\n                }\n            } else {\n                this.LastUserInput = $event;\n            }\n        } else {\n            this.LastUserInput = $event;\n        }\n\n        const index: number = this.History.length - 1;\n        const response: KonversoAnswer = await this.service.send($event.message).catch((err: string) => {\n            console.log('We got an error ', err);\n            // @ts-ignore\n            this.History[index].error = true;\n        });\n        this.triggerKbotResponse(response);\n    }\n\n    async sendBotCommand($event: string, push: boolean = true) {\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\n        if ($event === 'yes_response' || $event === 'no_response' || $event == 'exit') {\n            this.LastUserInput = null;\n        }\n        const response: KonversoAnswer = await this.service.send($event).catch((err: string) => {\n            console.log('We got an error ', err);\n        });\n        if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\n            response.response.medias[0].required_actions.length) {\n            this.disableUserInput = true;\n        } else {\n            this.disableUserInput = false;\n        }\n        if (response && response.response && push) {\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        } else if (response && response.response && !push) {\n            this.LastUserInput = null;\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        } else {\n            this.LastUserInput = null;\n        }\n    }\n\n    private _isMobile(): boolean {\n\n        const isMobile = {\n            Android: (): boolean => {\n                return !!navigator.userAgent.match(/Android/i);\n            },\n            BlackBerry: (): boolean => {\n                return !!navigator.userAgent.match(/BlackBerry/i);\n            },\n            iOS: (): boolean => {\n                return !!navigator.userAgent.match(/iPhone|iPad|iPod/i);\n            },\n            Opera: (): boolean => {\n                return !!navigator.userAgent.match(/Opera Mini/i);\n            },\n            Windows: (): boolean => {\n                return !!navigator.userAgent.match(/IEMobile/i) || !!navigator.userAgent.match(/WPDesktop/i);\n            },\n            any: (): boolean => {\n                return !!(isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n            }\n        };\n        return isMobile.any();\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  private lang = {\n      'fr': {\n          'GO': `C'est parti`,\n          'SEND': 'Envoyer',\n          'SELECT': 'Vous devez sélectionner une réponse',\n      },\n      'en': {\n          'GO': `Let's go`,\n          'SEND': 'Send',\n          'SELECT': 'You must select an answer',\n      }\n  }\n\n  constructor() { }\n\n  public translate(l, word) {\n    return this.lang[l][word];\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {DefaultAssets, OpenChatBotResponse, UserInput} from '../../interface/KonversoInterface';\nimport {KonversoService} from '../konverso.service';\nimport {TranslateService} from '../translate.service';\n//import * as run from 'projects/konverso/assets/animatedback.js';\n//import {KawaseBlurFilter} from \"../../filters/kawase-blur/src/KawaseBlurFilter\";\ndeclare var PIXI: any;\nconst defaultInputType = 'text';\nconst defaultInputLimit = 300;\n\n@Component({\n    selector: 'bot-full-screen',\n    templateUrl: './desktop-full-screen.component.html',\n    styleUrls: ['./desktop-full-screen.component.css']\n})\nexport class DesktopFullScreenComponent implements OnChanges, OnInit {\n    @Input() AssistantMode: boolean = false;\n    @Input() assets: DefaultAssets;\n    @Input() firstVisit: boolean = false;\n    @Input() firstUsageStory: string[];\n    @Input() displayData: (UserInput | OpenChatBotResponse)[];\n    @Input() disableUserInput: boolean;\n    @Input() LastUserInput: UserInput;\n    @Input() LastBotAnswer: OpenChatBotResponse;\n    @Input() PlaceHolder: string[];\n    @Input() IsMobile: boolean = false;\n    @Input() showInput: boolean;\n    @Input() NumberPlaceHolder: string[];\n\n    @Output() readySend: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n    @Output() send: EventEmitter<UserInput> = new EventEmitter<UserInput>(null);\n    @Output() sendBotCommand: EventEmitter<string> = new EventEmitter<string>(null);\n    @Output() sendEvent: EventEmitter<string> = new EventEmitter<string>(null);\n    public userInput: string;\n    public currentPlaceHolder: string = '';\n    public sendBtn = '';\n    public select = '';\n    public changed = false;\n    public botListening = false;\n    public showWrapper = false;\n    public showText = false;\n    public inputType: string = defaultInputType;\n    public inputLimit: number = defaultInputLimit;\n    private newMessage = false;\n    private messageCurrent = '';\n    private msgArray = [];\n    private botListeningTimer = 0;\n    private anim_done = false;\n    private reloaded = false;\n    private timer;\n\n    constructor(translate: TranslateService, private service: KonversoService) {\n        service.lang.subscribe((r) => {\n            if (service.locale) {\n                this.sendBtn = translate.translate(service.locale, 'SEND');\n                this.select = translate.translate(service.locale, 'SELECT');\n            }\n        });\n    }\n\n    ngOnChanges() {\n        let t = setInterval(() => {\n            if (document.querySelectorAll('.bot-answer')) {\n                let elems = document.querySelectorAll('.bot-answer');\n                if (elems.length > 0) {\n                    let index = 0, length = elems.length;\n                    let rep = true;\n                    for (; index < length; index++) {\n                        let temp = elems[index] as HTMLElement;\n                        if (temp.style.opacity == '0') {\n                            temp.style.opacity = '1';\n                        }\n                    }\n                    this.anim_done = rep;\n                    if (this.anim_done) {\n                        clearInterval(t);\n                    }\n                }\n            }\n        }, 100);\n\n        this.changed = false;\n\n        if (document.getElementById('text') && !this.LastBotAnswer?.text.includes('loading-dots')) {\n            document.getElementById('text').innerHTML = '';\n        }\n\n        console.log('-------> enter', this.LastBotAnswer?.text.includes('<number>') && this.LastBotAnswer?.text.includes('</number>'));\n        if (this.LastBotAnswer?.text.includes('<number>') && this.LastBotAnswer?.text.includes('</number>')) {\n            this.inputType = 'number';\n            this.inputLimit = 999;\n            this.currentPlaceHolder = this.NumberPlaceHolder[Math.floor(Math.random() * this.NumberPlaceHolder.length)];\n        } else {\n            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n            this.inputType = defaultInputType;\n            this.inputLimit = defaultInputLimit;\n        }\n\n        console.log('TYPE %s MAX %d', this.inputType,  this.inputLimit, this.currentPlaceHolder)\n        //console.log(this.LastBotAnswer);\n\n        if (!this.anim_done) {\n            let t2 = setInterval(() => {\n                if (this.LastBotAnswer && !this.LastBotAnswer?.text.includes('loading-dots') && this.anim_done) {\n                    clearInterval(t2);\n                    const string = this.LastBotAnswer?.text\n                        .split('<br/>').join(` `)\n                        .split('&eacute;').join('é')\n                        .split('&egrave;').join('è')\n                        .replace(/<[^>]*>?/gm, '')\n                        .split('&nbsp;').join('');\n\n                    this.msgArray = string.split('');\n                    if (this.messageCurrent !== string) {\n                        this.newMessage = true;\n                        this.messageCurrent = string;\n                        this.launchLoop();\n                    }\n                    //this.looper(array, timer);\n                }\n            }, 100);\n        } else {\n            const string = this.LastBotAnswer?.text\n                .split('<br/>').join(` `)\n                .split('&eacute;').join('é')\n                .split('&egrave;').join('è')\n                .replace(/<[^>]*>?/gm, '')\n                .split('&nbsp;').join('');\n\n            this.msgArray = string.split('');\n            if (this.messageCurrent !== string && string !== '') {\n                this.newMessage = true;\n                this.messageCurrent = string;\n                this.launchLoop();\n            }\n        }\n\n        setTimeout(() => {\n            this.changed = true;\n        }, 100);\n    }\n\n    launchLoop() {\n        this.timer = setInterval(() => {\n            if (this.msgArray.length == 0) {\n                clearInterval(this.timer);\n            }\n            if (this.newMessage) {\n                if (document.getElementById('text')) {\n                    document.getElementById('text').innerHTML = '';\n                }\n\n                this.newMessage = false;\n                //this.msgArray = this.messageCurrent.split(\"\");\n                clearInterval(this.timer);\n                this.launchLoop();\n            }\n            this.looper();\n        }, 60);\n    }\n\n    looper() {\n        if (this.msgArray.length > 0 && !this.reloaded) {\n            if (document.getElementById('text')) {\n                document.getElementById('text').innerHTML += this.msgArray.shift();\n            }\n        }/*else {\n        clearTimeout(timer);\n      }*/\n        /*timer = setTimeout(() => {\n          this.looper(array, timer);\n        }, 30);*/\n    }\n\n    ngOnInit(): void {\n        this.inputType = defaultInputType;\n        this.inputLimit = defaultInputLimit;\n        if (this.PlaceHolder) {\n            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n            setInterval(() => {\n                this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n            }, 3000);\n        }\n\n        setTimeout(() => {\n            this.showWrapper = true;\n        }, 2000);\n\n        setTimeout(() => {\n            this.showText = true;\n        }, 2500);\n\n        let t = setInterval(() => {\n            if (document.querySelectorAll('.bot-answer')) {\n                let elems = document.querySelectorAll('.bot-answer');\n                if (elems.length > 0) {\n                    let index = 0, length = elems.length;\n                    let rep = true;\n                    for (; index < length; index++) {\n                        let temp = elems[index] as HTMLElement;\n                        if (temp.style.opacity == '0') {\n                            rep = false;\n                        }\n                    }\n                    this.anim_done = rep;\n                    if (this.anim_done) {\n                        clearInterval(t);\n                    }\n                }\n            }\n        }, 100);\n\n        //run.run();\n\n        setInterval(() => {\n            if (this.botListeningTimer > 0) {\n                this.botListeningTimer -= 1;\n\n                if (this.botListeningTimer > 0) {\n                    document.getElementById('bot').className = 'a-cue-voice speaking';\n                    document.getElementById('bot-icon').className = 'a-cue-icon speakingicon';\n                } else {\n                    document.getElementById('bot').className = 'a-cue-voice';\n                    document.getElementById('bot-icon').className = 'a-cue-icon';\n                }\n\n                this.botListening = this.botListeningTimer > 0;\n            }\n        }, 500);\n    }\n\n    userWriting(key: any) {\n        if (key.code === 'Enter') {\n            this.botListening = false;\n            this.botListeningTimer = 0;\n        } else if (key.code === 'Backspace') {\n\n        } else {\n            this.botListening = true;\n            if (this.botListeningTimer == 0) {\n                this.botListeningTimer += 2;\n            } else if (this.botListeningTimer < 5) {\n                this.botListeningTimer += 1;\n            }\n        }\n    }\n\n    public emit($event) {\n        this.firstVisit = false;\n        this.readySend.emit(true);\n    }\n\n    public _send() {\n        if (this.LastBotAnswer?.endOfTopic && this.LastUserInput) {\n            this.LastUserInput.message = '';\n        }\n\n        this.botListening = false;\n        const userData: UserInput = {\n            message: this.userInput,\n            date: new Date().toLocaleTimeString(navigator.language, {\n                hour: '2-digit',\n                minute: '2-digit'\n            })\n        };\n        this.send.emit(userData);\n        this.userInput = null;\n    }\n\n    async scroll(scrollHeight: number) {\n        return new Promise<number>((resolve) => {\n            setTimeout(() => {\n                resolve(0);\n            }, 300);\n        });\n\n    }\n\n    byPassUserInput(botdata: string, i?: number) {\n        /*const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.show-btn');\n        for (let btn of Array.from(buttons)) {\n          btn.classList.add('hidden-btn');\n        }*/\n        const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');\n        for (let btn of Array.from(buttons)) {\n            btn.classList.add('hidden-btn');\n        }\n        this.sendBotCommand.emit(botdata);\n        setTimeout(() => {\n            const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');\n            for (let btn of Array.from(buttons)) {\n                btn.classList.remove('hidden-btn');\n            }\n        }, 1000);\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DefaultAssets} from '../../interface/KonversoInterface';\nimport { KonversoService } from '../konverso.service';\nimport { TranslateService } from '../translate.service';\n\n@Component({\n  selector: 'bot-first-visit',\n  templateUrl: './first-visit.component.html',\n  styleUrls: ['./first-visit.component.scss']\n})\nexport class FirstVisitComponent implements OnInit {\n  @Input() firstUsageStory: string[];\n  @Input() assets: DefaultAssets;\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n  public position = 0;\n  public current = '';\n  public go = '';\n\n  constructor(translate: TranslateService, private service: KonversoService) {\n    service.lang.subscribe((r) => {\n      if (service.locale) {\n        this.go = translate.translate(service.locale, 'GO');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.current = this.firstUsageStory[this.position];\n    const clear = setInterval(() => {\n      if (this.position < (this.firstUsageStory.length - 1)) {\n        this.current = this.firstUsageStory[++this.position];\n      } else {\n        clearInterval(clear);\n      }\n    }, 5000);\n  }\n\n  goTo(pos: number) {\n    this.position = pos;\n    this.current = this.firstUsageStory[this.position];\n  }\n\n  start(): void {\n    //console.log('OOOKKKK')\n    this.ready.emit(true);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n  public transform(value: any): any {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {KonversoComponent} from './konverso.component';\nimport {KonversoInterface} from '../interface/KonversoInterface';\nimport {KonversoService} from './konverso.service';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DesktopFullScreenComponent} from './desktop-full-screen/desktop-full-screen.component';\nimport {CommonModule} from '@angular/common';\nimport { FirstVisitComponent } from './first-visit/first-visit.component';\nimport { SafeHtmlPipe } from './pipe/safe-html.pipe';\n\n// @ts-ignore\n@NgModule({\n  declarations: [KonversoComponent, DesktopFullScreenComponent, FirstVisitComponent, SafeHtmlPipe],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  providers : [KonversoService],\n  exports: [KonversoComponent]\n})\nexport class KonversoModule {\n  constructor(@Optional() @SkipSelf() parentModule?: KonversoModule) {\n    if (parentModule) {\n      throw new Error(\n        'KonversoModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: KonversoInterface): ModuleWithProviders<KonversoModule> {\n    return {\n      ngModule: KonversoModule,\n      providers: [\n        {provide: '__NgxKonverso__', useValue: config},\n        KonversoService\n      ]\n    };\n  }\n}\n"]}