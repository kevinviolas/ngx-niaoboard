import { EventEmitter, OnInit } from '@angular/core';
import { KonversoService } from './konverso.service';
import { ColorSet, DefaultAssets, OpenChatBotResponse, UserInput } from '../interface/KonversoInterface';
import * as i0 from "@angular/core";
export declare class KonversoComponent implements OnInit {
    private service;
    _ready: EventEmitter<boolean>;
    ready: EventEmitter<boolean>;
    sended: EventEmitter<boolean>;
    showInput: boolean;
    afterProcess: boolean;
    query: string;
    isMobile: boolean;
    assets: DefaultAssets;
    firstVisit: boolean;
    firstUsageStory: string[];
    AssistantMode: boolean;
    colorSet: ColorSet;
    History: (UserInput | OpenChatBotResponse)[];
    disableUserInput: boolean;
    LastUserInput: UserInput;
    LastBotAnswer: OpenChatBotResponse;
    PlaceHolder: string[];
    NumberPlaceHolder: string[];
    Welcome: string;
    constructor(service: KonversoService);
    private triggerKbotResponse;
    ngOnInit(): void;
    send($event: UserInput): Promise<boolean>;
    sendBotCommand($event: string, push?: boolean): Promise<void>;
    private _isMobile;
    static ɵfac: i0.ɵɵFactoryDeclaration<KonversoComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<KonversoComponent, "ngx-konverso", never, { "showInput": "showInput"; "afterProcess": "afterProcess"; }, { "ready": "ready"; "sended": "sended"; }, never, never>;
}
