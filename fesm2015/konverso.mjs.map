{"version":3,"file":"konverso.mjs","sources":["../../../projects/konverso/src/lib/MyFuckingMustache.ts","../../../projects/konverso/src/lib/konverso.service.ts","../../../projects/konverso/src/Sample/BotMessageSample.ts","../../../projects/konverso/src/Sample/DotLoader.ts","../../../projects/konverso/src/lib/translate.service.ts","../../../projects/konverso/src/lib/modal-add-attachments/modal-add-attachments.component.html","../../../projects/konverso/src/lib/modal-add-attachments/modal-add-attachments.component.ts","../../../projects/konverso/src/lib/pipe/safe-html.pipe.ts","../../../projects/konverso/src/lib/first-visit/first-visit.component.html","../../../projects/konverso/src/lib/first-visit/first-visit.component.ts","../../../projects/konverso/src/lib/custom-checkbox-calendar/custom-checkbox-calendar.component.html","../../../projects/konverso/src/lib/custom-checkbox-calendar/custom-checkbox-calendar.component.ts","../../../projects/konverso/src/lib/desktop-full-screen/desktop-full-screen.component.html","../../../projects/konverso/src/lib/desktop-full-screen/desktop-full-screen.component.ts","../../../projects/konverso/src/lib/konverso.component.ts","../../../projects/konverso/src/lib/konverso.component.html","../../../projects/konverso/src/lib/konverso.module.ts","../../../projects/konverso/src/public-api.ts","../../../projects/konverso/src/konverso.ts"],"sourcesContent":["/***********************************************************\r\n **  @project\r\n **  @file\r\n **  @author Brice Daupiard <brice.daupiard@nowbrains.com>\r\n **  @Date 29/03/2022\r\n **  @Description\r\n ***********************************************************/\r\nconst objectToString = Object.prototype.toString;\r\nconst isArrayPolyfill = (object: any) => {\r\n    return objectToString.call(object) === '[object Array]';\r\n};\r\n\r\nconst isFunction = (object: any) => {\r\n    return typeof object === 'function';\r\n};\r\n\r\nconst typeStr = (obj: any) => {\r\n    return isArray(obj) ? 'array' : typeof obj;\r\n};\r\n\r\nconst escapeRegExp = (str: any) => {\r\n    return str.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\r\n};\r\n\r\nconst hasProperty = (obj, propName) => {\r\n    return obj != null && typeof obj === 'object' && (propName in obj);\r\n};\r\n\r\nconst primitiveHasOwnProperty = (primitive: any, propName: any) => {\r\n    return (\r\n        primitive != null\r\n        && typeof primitive !== 'object'\r\n        && primitive.hasOwnProperty\r\n        && primitive.hasOwnProperty(propName)\r\n    );\r\n};\r\n\r\nconst isArray = Array.isArray || isArrayPolyfill;\r\n\r\nconst regExpTest = RegExp.prototype.test;\r\n\r\nconst testRegExp = (regEx: RegExp, str: string) => {\r\n    return regExpTest.call(regEx, str);\r\n};\r\n\r\nconst nonSpaceRe = /\\S/;\r\n\r\nconst isWhitespace = (str: string) => {\r\n    return !testRegExp(nonSpaceRe, str);\r\n};\r\n\r\nconst entityMap = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    '\\'': '&#39;',\r\n    '/': '&#x2F;',\r\n    '`': '&#x60;',\r\n    '=': '&#x3D;'\r\n};\r\n\r\nconst escapeHtml = (str: string) => {\r\n    return String(str).replace(/[&<>\"'`=\\/]/g, (s: string) => {\r\n        return entityMap[s];\r\n    });\r\n};\r\n\r\nconst whiteRe = /\\s*/;\r\nconst spaceRe = /\\s+/;\r\nconst equalsRe = /\\s*=/;\r\nconst curlyRe = /\\s*\\}/;\r\nconst tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\r\n\r\nconst squashTokens = (tokens: any) => {\r\n    const squashedTokens = [];\r\n\r\n    let token, lastToken;\r\n    for (let i = 0, numTokens = tokens.length; i < numTokens; ++i) {\r\n        token = tokens[i];\r\n\r\n        if (token) {\r\n            if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\r\n                lastToken[1] += token[1];\r\n                lastToken[3] = token[3];\r\n            } else {\r\n                squashedTokens.push(token);\r\n                lastToken = token;\r\n            }\r\n        }\r\n    }\r\n\r\n    return squashedTokens;\r\n};\r\n\r\nconst nestTokens = (tokens: any) => {\r\n    const nestedTokens = [];\r\n    let collector = nestedTokens;\r\n    const sections = [];\r\n\r\n    let token, section;\r\n    for (let i = 0, numTokens = tokens.length; i < numTokens; ++i) {\r\n        token = tokens[i];\r\n\r\n        switch (token[0]) {\r\n            case '#':\r\n            case '^':\r\n                collector.push(token);\r\n                sections.push(token);\r\n                collector = token[4] = [];\r\n                break;\r\n            case '/':\r\n                section = sections.pop();\r\n                section[5] = token[2];\r\n                collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\r\n                break;\r\n            default:\r\n                collector.push(token);\r\n        }\r\n    }\r\n\r\n    return nestedTokens;\r\n};\r\n\r\nconst parseTemplate = (template: any, tags: any) => {\r\n    if (!template) {\r\n        return [];\r\n    }\r\n    let lineHasNonSpace = false;\r\n    let sections = [];     // Stack to hold section tokens\r\n    let tokens = [];       // Buffer to hold the tokens\r\n    let spaces = [];       // Indices of whitespace tokens on the current line\r\n    let hasTag = false;    // Is there a {{tag}} on the current line?\r\n    let nonSpace = false;  // Is there a non-space char on the current line?\r\n    let indentation = '';  // Tracks indentation for tags that use it\r\n    let tagIndex = 0;      // Stores a count of number of tags encountered on a line\r\n\r\n    // Strips all whitespace tokens array for the current line\r\n    // if there was a {{#tag}} on it and otherwise only space.\r\n    const stripSpace = () => {\r\n        if (hasTag && !nonSpace) {\r\n            while (spaces.length) {\r\n                delete tokens[spaces.pop()];\r\n            }\r\n        } else {\r\n            spaces = [];\r\n        }\r\n\r\n        hasTag = false;\r\n        nonSpace = false;\r\n    };\r\n\r\n\r\n    const compileTags = (tagsToCompile) => {\r\n        if (typeof tagsToCompile === 'string') {\r\n            tagsToCompile = tagsToCompile.split(spaceRe, 2);\r\n        }\r\n\r\n        if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) {\r\n            throw new Error('Invalid tags: ' + tagsToCompile);\r\n        }\r\n\r\n        const openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\r\n        const closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\r\n        const closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\r\n        return {openingTagRe, closingTagRe, closingCurlyRe};\r\n    };\r\n\r\n\r\n\r\n    let {openingTagRe, closingTagRe, closingCurlyRe} = compileTags(tags || BARBE.tags);\r\n    const scanner = new Scanner(template);\r\n\r\n    let start, type, value, chr, token, openSection;\r\n    while (!scanner.eos()) {\r\n        start = scanner.pos;\r\n\r\n        // Match any text between tags.\r\n        value = scanner.scanUntil(openingTagRe);\r\n\r\n        if (value) {\r\n            for (let i = 0, valueLength = value.length; i < valueLength; ++i) {\r\n                chr = value.charAt(i);\r\n\r\n                if (isWhitespace(chr)) {\r\n                    spaces.push(tokens.length);\r\n                    indentation += chr;\r\n                } else {\r\n                    nonSpace = true;\r\n                    lineHasNonSpace = true;\r\n                    indentation += ' ';\r\n                }\r\n\r\n                tokens.push(['text', chr, start, start + 1]);\r\n                start += 1;\r\n\r\n                // Check for whitespace on the current line.\r\n                if (chr === '\\n') {\r\n                    stripSpace();\r\n                    indentation = '';\r\n                    tagIndex = 0;\r\n                    lineHasNonSpace = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Match the opening tag.\r\n        if (!scanner.scan(openingTagRe)) {\r\n            break;\r\n        }\r\n\r\n        hasTag = true;\r\n\r\n        // Get the tag type.\r\n        type = scanner.scan(tagRe) || 'name';\r\n        scanner.scan(whiteRe);\r\n\r\n        // Get the tag value.\r\n        if (type === '=') {\r\n            value = scanner.scanUntil(equalsRe);\r\n            scanner.scan(equalsRe);\r\n            scanner.scanUntil(closingTagRe);\r\n        } else if (type === '{') {\r\n            value = scanner.scanUntil(closingCurlyRe);\r\n            scanner.scan(curlyRe);\r\n            scanner.scanUntil(closingTagRe);\r\n            type = '&';\r\n        } else {\r\n            value = scanner.scanUntil(closingTagRe);\r\n        }\r\n\r\n        // Match the closing tag.\r\n        if (!scanner.scan(closingTagRe)) {\r\n            throw new Error('Unclosed tag at ' + scanner.pos);\r\n        }\r\n\r\n        if (type === '>') {\r\n            token = [type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace];\r\n        } else {\r\n            token = [type, value, start, scanner.pos];\r\n        }\r\n        tagIndex++;\r\n        tokens.push(token);\r\n\r\n        if (type === '#' || type === '^') {\r\n            sections.push(token);\r\n        } else if (type === '/') {\r\n            // Check section nesting.\r\n            openSection = sections.pop();\r\n\r\n            if (!openSection) {\r\n                throw new Error('Unopened section \"' + value + '\" at ' + start);\r\n            }\r\n\r\n            if (openSection[1] !== value) {\r\n                throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\r\n            }\r\n        } else if (type === 'name' || type === '{' || type === '&') {\r\n            nonSpace = true;\r\n        } else if (type === '=') {\r\n            // Set the tags for the next time around.\r\n            compileTags(value);\r\n        }\r\n    }\r\n\r\n    stripSpace();\r\n\r\n    // Make sure there are no open sections when we're done.\r\n    openSection = sections.pop();\r\n\r\n    if (openSection) {\r\n        throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\r\n    }\r\n\r\n    return nestTokens(squashTokens(tokens));\r\n};\r\n\r\n\r\nclass Scanner {\r\n    public pos: number = 0;\r\n    private string: string;\r\n    private tail: string;\r\n\r\n    constructor(str: string) {\r\n        this.string = str;\r\n        this.tail = str;\r\n    }\r\n\r\n    public eos() {\r\n        return this.tail === '';\r\n    }\r\n\r\n    public scan(regExp: RegExp) {\r\n        const match = this.tail.match(regExp);\r\n\r\n        if (!match || match.index !== 0) {\r\n            return '';\r\n        }\r\n\r\n        const str: string = match[0];\r\n\r\n        this.tail = this.tail.substring(str.length);\r\n        this.pos += str.length;\r\n\r\n        return str;\r\n    }\r\n\r\n    public scanUntil(regExp: RegExp) {\r\n        const index = this.tail.search(regExp);\r\n        let match;\r\n\r\n        switch (index) {\r\n            case -1:\r\n                match = this.tail;\r\n                this.tail = '';\r\n                break;\r\n            case 0:\r\n                match = '';\r\n                break;\r\n            default:\r\n                match = this.tail.substring(0, index);\r\n                this.tail = this.tail.substring(index);\r\n        }\r\n\r\n        this.pos += match.length;\r\n\r\n        return match;\r\n    }\r\n}\r\n\r\nclass Context {\r\n    private readonly view: any;\r\n    private cache: any;\r\n    private parent: any;\r\n\r\n\r\n    constructor(view: any, parentContext: any) {\r\n        this.view = view;\r\n        this.cache = {'.': this.view};\r\n        this.parent = parentContext;\r\n    }\r\n\r\n    push(view: any) {\r\n        return new Context(view, this);\r\n    }\r\n\r\n    lookup(name: string) {\r\n        const cache = this.cache;\r\n\r\n        let value;\r\n        if (cache.hasOwnProperty(name)) {\r\n            value = cache[name];\r\n        } else {\r\n            let context: any = this;\r\n            let intermediateValue: any = false;\r\n            let names: any = false;\r\n            let index: any = false;\r\n            let lookupHit: any = false;\r\n\r\n            while (context) {\r\n                if (name.indexOf('.') > 0) {\r\n                    intermediateValue = context.view;\r\n                    names = name.split('.');\r\n                    index = 0;\r\n                    while (intermediateValue != null && index < names.length) {\r\n                        if (index === (names.length - 1)) {\r\n                            lookupHit = (\r\n                                hasProperty(intermediateValue, names[index])\r\n                                || primitiveHasOwnProperty(intermediateValue, names[index])\r\n                            );\r\n                        }\r\n\r\n                        intermediateValue = intermediateValue[names[index++]];\r\n                    }\r\n                } else {\r\n                    intermediateValue = context.view[name];\r\n                    lookupHit = hasProperty(context.view, name);\r\n                }\r\n                if (lookupHit) {\r\n                    value = intermediateValue;\r\n                    break;\r\n                }\r\n                context = context.parent;\r\n            }\r\n            cache[name] = value;\r\n        }\r\n        if (isFunction(value)) {\r\n            value = value.call(this.view);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\nclass Cache {\r\n    private _cache = {};\r\n\r\n    public set(key: string, value: any) {\r\n        this._cache[key] = value;\r\n    }\r\n\r\n    public get(key: string) {\r\n        return this._cache[key];\r\n    }\r\n\r\n    public clear() {\r\n        this._cache = {};\r\n    }\r\n}\r\n\r\nclass Writer {\r\n    public templateCache = new Cache();\r\n\r\n    public clearCache() {\r\n        if (typeof this.templateCache !== 'undefined') {\r\n            this.templateCache.clear();\r\n        }\r\n    }\r\n\r\n    public parse(template: any, tags: any) {\r\n        const cache = this.templateCache;\r\n        const cacheKey = template + ':' + (tags || BARBE.tags).join(':');\r\n        const isCacheEnabled = typeof cache !== 'undefined';\r\n        let tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\r\n\r\n        if (tokens === undefined) {\r\n            tokens = parseTemplate(template, tags);\r\n            isCacheEnabled && cache.set(cacheKey, tokens);\r\n        }\r\n        return tokens;\r\n    }\r\n\r\n    public render(template: any, view: any, partials: any, config: any) {\r\n        const tags = this.getConfigTags(config);\r\n        const tokens = this.parse(template, tags);\r\n        const context = (view instanceof Context) ? view : new Context(view, undefined);\r\n        return this.renderTokens(tokens, context, partials, template, config);\r\n    }\r\n\r\n\r\n    private getConfigTags(config: any) {\r\n        if (isArray(config)) {\r\n            return config;\r\n        } else if (config && typeof config === 'object') {\r\n            return config.tags;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    private rawValue(token: any[]) {\r\n        return token[1];\r\n    };\r\n\r\n    private renderTokens(tokens: any, context: any, partials: any, originalTemplate: any, config: any) {\r\n        let buffer = '';\r\n        let token;\r\n        let symbol;\r\n        let value;\r\n        for (let i = 0, numTokens = tokens.length; i < numTokens; ++i) {\r\n            value = undefined;\r\n            token = tokens[i];\r\n            symbol = token[0];\r\n\r\n            if (symbol === '#') {\r\n                value = this.renderSection(token, context, partials, originalTemplate, config);\r\n            } else if (symbol === '^') {\r\n                value = this.renderInverted(token, context, partials, originalTemplate, config);\r\n            } else if (symbol === '>') {\r\n                value = this.renderPartial(token, context, partials, config);\r\n            } else if (symbol === '&') {\r\n                value = this.unescapedValue(token, context);\r\n            } else if (symbol === 'name') {\r\n                value = this.escapedValue(token, context, config);\r\n            } else if (symbol === 'text') {\r\n                value = this.rawValue(token);\r\n            }\r\n\r\n            if (value !== undefined) {\r\n                buffer += value;\r\n            }\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    private renderSection(token: any[], context: any, partials: any, originalTemplate: any, config: any) {\r\n        const self = this;\r\n        let buffer = '';\r\n        let value = context.lookup(token[1]);\r\n\r\n        const subRender = (template) => {\r\n            return self.render(template, context, partials, config);\r\n        };\r\n\r\n        if (!value) {\r\n            return;\r\n        }\r\n\r\n        if (isArray(value)) {\r\n            for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\r\n                buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\r\n            }\r\n        } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\r\n            buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\r\n        } else if (isFunction(value)) {\r\n            if (typeof originalTemplate !== 'string') {\r\n                throw new Error('Cannot use higher-order sections without the original template');\r\n            }\r\n\r\n            // Extract the portion of the original template that the section contains.\r\n            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\r\n\r\n            if (value != null) {\r\n                buffer += value;\r\n            }\r\n        } else {\r\n            buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n\r\n    private renderInverted(token: any[], context: any, partials: any, originalTemplate: any, config: any) {\r\n        const value = context.lookup(token[1]);\r\n\r\n        if (!value || (isArray(value) && value.length === 0)) {\r\n            return this.renderTokens(token[4], context, partials, originalTemplate, config);\r\n        }\r\n    };\r\n\r\n\r\n    private indentPartial(partial: any, indentation: any, lineHasNonSpace: any) {\r\n        const filteredIndentation = indentation.replace(/[^ \\t]/g, '');\r\n        const partialByNl = partial.split('\\n');\r\n        for (let i = 0; i < partialByNl.length; i++) {\r\n            if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\r\n                partialByNl[i] = filteredIndentation + partialByNl[i];\r\n            }\r\n        }\r\n        return partialByNl.join('\\n');\r\n    };\r\n\r\n\r\n    private renderPartial(token: any[], context: any, partials: any, config: any) {\r\n        if (!partials) {\r\n            return;\r\n        }\r\n        const tags = this.getConfigTags(config);\r\n\r\n        const value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\r\n        if (value !== null) {\r\n            const lineHasNonSpace = token[6];\r\n            const tagIndex = token[5];\r\n            const indentation = token[4];\r\n            let indentedValue = value;\r\n            if (tagIndex === 0 && indentation) {\r\n                indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\r\n            }\r\n            const tokens = this.parse(indentedValue, tags);\r\n            return this.renderTokens(tokens, context, partials, indentedValue, config);\r\n        }\r\n    }\r\n\r\n    private unescapedValue(token: any[], context: any) {\r\n        const value = context.lookup(token[1]);\r\n        if (value !== null) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    private getConfigEscape(config: any) {\r\n        return config && typeof config === 'object' && !isArray(config) ? config.escape : undefined;\r\n    }\r\n\r\n    private escapedValue(token: any[], context: any, config: any) {\r\n        const escape = this.getConfigEscape(config) || BARBE.escape;\r\n        const value = context.lookup(token[1]);\r\n        if (value != null) {\r\n            return (typeof value === 'number' && escape === BARBE.escape) ? String(value) : escape(value);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class BARBE {\r\n    public static tags = ['{{', '}}'];\r\n    public static escape: any = escapeHtml;\r\n    public static Scanner: any = Scanner;\r\n    public static Context: any = Context;\r\n    public static Writer: any = Writer;\r\n    public name = 'MY F**KING MUSTACHE LIBRARY FOR ANGULAR';\r\n    public version = 'ECLATER';\r\n    private _Writer: any = new Writer();\r\n\r\n    get templateCache() {\r\n        return this._Writer.templateCache;\r\n    }\r\n\r\n    set templateCache(cache: any) {\r\n        this._Writer.templateCache = cache;\r\n    }\r\n\r\n    public parse(template: any, tags: any) {\r\n        return this._Writer.parse(template, tags);\r\n    }\r\n\r\n    public render(template: any, view: any, partials?: any, config?: any) {\r\n        if (typeof template !== 'string') {\r\n            throw new TypeError('Invalid template! Template should be a \"string\" ' +\r\n                'but \"' + typeStr(template) + '\" was given as the first ' +\r\n                'argument for mustache#render(template, view, partials)');\r\n        }\r\n\r\n        return this._Writer.render(template, view, partials, config);\r\n    };\r\n\r\n\r\n    public clearCache() {\r\n        this._Writer.clearCache();\r\n    }\r\n}\r\n","import {EventEmitter, Inject, Injectable} from '@angular/core';\r\nimport {ColorSet, DefaultAssets, KonversoInterface, KonversoQuery, KonversoUser} from '../interface/KonversoInterface';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BARBE} from './MyFuckingMustache';\r\n\r\nconst barbe = new BARBE();\r\n\r\n@Injectable()\r\nexport class KonversoService {\r\n    public authentication: EventEmitter<KonversoUser> = new EventEmitter<KonversoUser>();\r\n    public assets: DefaultAssets;\r\n    public firstVisit = false;\r\n    public firstUsageStory: string[];\r\n    public ColorSet: ColorSet;\r\n    public PlaceHolder: string[];\r\n    public NumberPlaceHolder: string[];\r\n    public AssistantMode = false;\r\n    public Welcome: string;\r\n    public readyState: boolean = false;\r\n    public locale: string;\r\n    public _auth: boolean;\r\n    public lang = new BehaviorSubject('');\r\n    public customData: BehaviorSubject<{ [key: string]: any }> = new BehaviorSubject<{ [key: string]: any }>(null);\r\n    public emulationTrigger: BehaviorSubject<any> = new BehaviorSubject(null);\r\n    private token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n    // tslint:disable-next-line:variable-name\r\n    private _token = this.token.asObservable();\r\n    private user: KonversoUser;\r\n    private header: HttpHeaders;\r\n    private endpoint: string;\r\n\r\n    constructor(@Inject('__NgxKonverso__') config: KonversoInterface, private http: HttpClient) {\r\n        this.buildHeaders();\r\n        this.initInstance(config);\r\n    }\r\n\r\n    /**\r\n     * Send Query To backend server and get a response\r\n     * @param query\r\n     */\r\n    public async send(query: string): Promise<string | any> {\r\n        return new Promise((resolve, reject) => {\r\n            if (query && query.replace(new RegExp(' ', 'g'), '')) {\r\n                if (this.header) {\r\n                    const preparedData = this.buildQuery(query);\r\n                    const options: any = {\r\n                        headers: this.header\r\n                    };\r\n                    this.http.post(this.endpoint + '?t=' + new Date().getTime(), preparedData, options)\r\n                        .subscribe((data: any) => {\r\n                            resolve(data);\r\n                        });\r\n                } else {\r\n                    reject(new Error('Header is not set, please provide a token though user setting or though module configuration'));\r\n                }\r\n            } else {\r\n                reject(new Error('Current input is empty, please try again'));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Emulate user entry Query To backend server and get a response\r\n     * @param query\r\n     */\r\n    public async sendTriggerEmulation(query: string): Promise<void> {\r\n        const response = await this.send(query).catch((err: any) => {\r\n            console.log('error trigger emulation', err);\r\n        });\r\n        if (response) {\r\n            this.emulationTrigger.next({input: query, ...response});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * Generate Header for backend call\r\n     */\r\n    private buildHeaders() {\r\n        this._token.subscribe((token: string) => {\r\n            const bearer: string = 'Bearer ' + token;\r\n            this.header = new HttpHeaders({\r\n                //'Content-Type': 'application/json',\r\n                // 'Access-Control-Allow-Origin': window.location.origin,\r\n                'Authorization': bearer\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param config\r\n     * @private\r\n     * Initialize Data for User Instance\r\n     */\r\n    private initInstance(config: KonversoInterface) {\r\n        this._auth = !!config.auth;\r\n        if (config.endpoint) {\r\n            this.endpoint = config.endpoint;\r\n            if (config.AssistantMode) {\r\n                this.AssistantMode = config.AssistantMode;\r\n            }\r\n\r\n            if (config.defaultAssets) {\r\n                this.assets = config.defaultAssets;\r\n                if (config.defaultAssets.ColorSet) {\r\n                    this.ColorSet = config.defaultAssets.ColorSet;\r\n                }\r\n            }\r\n            if (config.auth) {\r\n                this.authentication.subscribe((user: KonversoUser) => {\r\n                    if (!user.lang && config.lang) {\r\n                        user.lang = config.lang;\r\n                    }\r\n                    this.locale = user?.lang;\r\n                    this.lang.next(this.locale);\r\n                    if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\r\n                        this.PlaceHolder = config.InputPlaceHolder[this.locale];\r\n                    }\r\n                    if (config.InputNumberPlaceHolder && config.InputNumberPlaceHolder[this.locale]) {\r\n                        this.NumberPlaceHolder = config.InputNumberPlaceHolder[this.locale];\r\n                    }\r\n                    if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\r\n                        this.Welcome = barbe.render(config.BotInitMessage.Welcome[this.locale], user);\r\n                    }\r\n                    if (user?.token) {\r\n                        this.token.next(user?.token);\r\n                    }\r\n                    if (user?.firstVisit) {\r\n                        this.firstVisit = true;\r\n                        delete user.firstVisit;\r\n                        if (config?.BotInitMessage?.FirstUsage &&\r\n                            this.locale &&\r\n                            config?.BotInitMessage?.FirstUsage[this.locale]) {\r\n                            this.firstUsageStory = [];\r\n                            for (const history of config.BotInitMessage.FirstUsage[this.locale]) {\r\n                                this.firstUsageStory.push(barbe.render(history, user));\r\n                            }\r\n                        }\r\n                    }\r\n                    this.user = user;\r\n                    this.readyState = true;\r\n                });\r\n            } else if (config.lang) {\r\n                this.locale = config.lang;\r\n                this.lang.next(this.locale);\r\n                if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\r\n                    this.PlaceHolder = config.InputPlaceHolder[this.locale];\r\n                }\r\n                if (config.InputNumberPlaceHolder && config.InputNumberPlaceHolder[this.locale]) {\r\n                    this.NumberPlaceHolder = config.InputNumberPlaceHolder[this.locale];\r\n                }\r\n                if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\r\n                    this.Welcome = config.BotInitMessage.Welcome[this.locale];\r\n                }\r\n                this.user = {\r\n                    userId: this.guid(),\r\n                    lang: config.lang\r\n                };\r\n                this.readyState = true;\r\n            }\r\n            if (config.token) {\r\n                this.token.next(config.token);\r\n            }\r\n        } else {\r\n            return new Error('Please provide endpoint');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param query\r\n     * @private\r\n     * prepare set data to push to backend server\r\n     */\r\n    private buildQuery(query: string): KonversoQuery {\r\n        // @ts-ignore\r\n        const custom: any = this.customData.getValue();\r\n        return {\r\n            ...custom,\r\n            ...this.user,\r\n            query: query.replace(/\\s+/g, ' ').trim(),\r\n            isSending: true\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * Generate Random uniq Id for Konverso Instance\r\n     */\r\n    private guid() {\r\n        let random = () => {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        };\r\n        return random() + random() + '-' + random() + '-' + random() + '-' + random() + '-' + random() + random() + random();\r\n    }\r\n}\r\n","/***********************************************************\r\n **  @project ngx-konverso                              **\r\n **  @file BotMessageSample                                         **\r\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\r\n **  @Date 02/04/2021                                         **\r\n ***********************************************************/\r\nimport {OpenChatBotResponse} from '../interface/KonversoInterface';\r\n\r\n\r\nexport const BotMessageSample : OpenChatBotResponse = {\r\n    query: null,\r\n    userId: null,\r\n    timestamp: 1617369777.976196,\r\n    text: null,\r\n    infoURL: '',\r\n    context: [],\r\n    suggestions: []\r\n};\r\n","/***********************************************************\r\n **  @project ngx-konverso                              **\r\n **  @file DotLoader                                         **\r\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\r\n **  @Date 07/04/2021                                         **\r\n ***********************************************************/\r\n\r\n\r\nexport const DotLoaderTemplate = (color: string) => `<div class=\"loading-dots\">\r\n<div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\r\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\r\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\r\n  </div>`;\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslateService {\r\n  private lang = {\r\n      'fr': {\r\n          'GO': `C'est parti`,\r\n          'SEND_MESSAGE': 'Envoyer mon message',\r\n          'SELECT': 'Vous devez sélectionner une réponse',\r\n          'SCREENSHOT': \"Capture d'écran\",\r\n          'SEND': 'Valider le nombre de personnes touchées',\r\n          'MONDAY': 'Lundi',\r\n          \"TUESDAY\": 'Mardi',\r\n          \"WEDNESDAY\": 'Mercredi',\r\n          \"THURSDAY\": 'Jeudi',\r\n          \"FRIDAY\": 'Vendredi',\r\n          \"SATURDAY\": 'Samedi',\r\n          \"SUNDAY\": 'Dimanche',\r\n          \"OTHER\": \"Autre\",\r\n          \"FREE_FIELD\": 'Champ libre',\r\n          \"VALIDATE\": 'Valider',\r\n          \"SKIP\": 'Passer',\r\n          \"MORNING\": \"Matin\",\r\n          \"AFTERNOON\": \"Après-midi\",\r\n          \"MORNING_ALL\": 'Matin (tous)',\r\n          \"AFTERNOON_ALL\": 'Après-midi (tous)',\r\n          \"ATTACHMENT\": 'pièce jointe',\r\n          \"ATTACHMENTS\": 'pièces jointes',\r\n          \"VALIDATE_AVAILABILITY\": \"Valider mes disponibilités\",\r\n      },\r\n      'en': {\r\n          'GO': `Let's go`,\r\n          'SEND_MESSAGE': 'Send my message',\r\n          'SELECT': 'You must select an answer',\r\n          'SCREENSHOT': 'Screenshot',\r\n          'SEND': 'Validate impacted people number',\r\n          \"MONDAY\": 'Monday',\r\n          \"TUESDAY\": 'Tuesday',\r\n          \"WEDNESDAY\": 'Wednesday',\r\n          \"THURSDAY\": 'Thursday',\r\n          \"FRIDAY\": 'Friday',\r\n          \"SATURDAY\": 'Saturday',\r\n          \"SUNDAY\": 'Sunday',\r\n          \"OTHER\": 'Other',\r\n          \"FREE_FIELD\": 'Free field',\r\n          \"VALIDATE\": 'Validate',\r\n          \"SKIP\": 'Skip',\r\n          \"MORNING\": \"Morning\",\r\n          \"AFTERNOON\": \"Afternoon\",\r\n          \"MORNING_ALL\": 'Morning (all)',\r\n          \"AFTERNOON_ALL\": 'Afternoon (all)',\r\n          \"ATTACHMENT\": 'attachment',\r\n          \"ATTACHMENTS\": 'attachments',\r\n          \"VALIDATE_AVAILABILITY\": \"Validate availability\",\r\n      }\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  public translate(l, word) {\r\n    return this.lang[l][word];\r\n  }\r\n}\r\n","<div class=\"position-relative modal-attachments-content\">\r\n\r\n    <div class=\"close-dialog-icon close-dialog-icon-15\" mat-dialog-close>\r\n        <nb-icon [icon]=\"'close'\" [size]=\"1\"></nb-icon>\r\n    </div>\r\n\r\n    <div class=\"bot bot-no-anim\">\r\n        <div class=\"circle1\"></div>\r\n        <div class=\"circle2\"></div>\r\n        <div class=\"circle3\"></div>\r\n    </div>\r\n\r\n    <div class=\"mt30 nb-title-l title\">\r\n        {{translate.translate(service.locale,'cases.VIEW.SEND_ME_YOUR_ATTACHMENTS') }}\r\n    </div>\r\n\r\n    <div class=\"mt30 mb15 file\" (click)=\"this.input.click()\">\r\n        <nb-icon [icon]=\"'image'\" [size]=\"1.5\"></nb-icon>\r\n        <div class=\"nb-text-s file-message\">\r\n          {{translate.translate(service.locale,'users.SETTINGS.DROP_PHOTO') }}\r\n        </div>\r\n        <div class=\"mb10 nb-text-s-1 file-format\">\r\n          Format .jpeg / .png / .svg\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <ng-container *ngFor=\"let d of documentList; let index = index\">\r\n        <div class=\"mb15 file-names\">\r\n            <div class=\"file-name-div\">\r\n                <div class=\"mr10 tar file-name\">\r\n                    {{ d.name }}\r\n                </div>\r\n                <nb-icon (click)=\"deleteFile(d)\" [icon]=\"'delete_1'\" [size]=\"1.5\" class=\"mr0 file-icon\"></nb-icon>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <button (click)=\"sendAttachments()\" [disabled]=\"!this.documentList[0]?.name\" class=\"mt15 full-width rounded primary btn-send\">\r\n        {{translate.translate(service.locale,'cases.VIEW.I_FINISHED') }}\r\n    </button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {TranslateService} from '../translate.service';\r\nimport {KonversoService} from '../konverso.service';\r\n\r\n@Component({\r\n    selector: 'modal-add-attachments',\r\n    templateUrl: './modal-add-attachments.component.html',\r\n    styleUrls: ['./modal-add-attachments.component.scss']\r\n})\r\nexport class ModalAddAttachmentsComponent implements OnInit {\r\n    documentList: Array<any> = [];\r\n    public input !: HTMLInputElement;\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            data : {input : HTMLInputElement,\r\n            documentList : Array<any>}\r\n        },\r\n        public translate: TranslateService,\r\n        public service: KonversoService,\r\n        private dialogRef: MatDialogRef<ModalAddAttachmentsComponent>\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        console.log(this.data.data);\r\n        this.documentList = this.data.data.documentList;\r\n        this.input = this.data.data.input;\r\n    }\r\n\r\n    deleteFile(file: any) {\r\n        this.documentList.splice(this.documentList.indexOf(file), 1);\r\n    }\r\n\r\n\r\n    sendAttachments() {\r\n        this.dialogRef.close( this.documentList);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n  constructor(protected sanitizer: DomSanitizer) {}\r\n  public transform(value: any): any {\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n","<ng-container>\r\n  <div class=\"bot-logo-init-wrapper\">\r\n    <!--<img [src]=\"assets.FullSizeLogo\">-->\r\n    <div class=\"m-carl-notification\">\r\n      <div class=\"m-carl-notification-cue m-cue\">\r\n        <div class=\"a-cue-icon\" id=\"bot-icon\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"bot-init-text\" [innerHTML]=\"current | safeHtml\"></div>\r\n  <div class=\"bot-init-bullet-step\">\r\n      <span *ngFor=\"let elem of firstUsageStory ; let pos = index\" class=\"bot-init-dot\"\r\n            [style]=\"pos === position ? {\r\n              backgroundColor : assets?.ColorSet?.Primary,\r\n              borderColor :assets?.ColorSet?.Primary\r\n              }:{\r\n                backgroundColor :assets?.ColorSet?.Secondary,\r\n                borderColor :assets?.ColorSet?.Primary\r\n                }\" (click)=\"goTo(pos)\">\r\n      </span>\r\n  </div>\r\n  <div class=\"bot-init-button-wrapper\">\r\n    <button mat-button class=\"bot-button button-lg\" [style]=\"{\r\n      backgroundColor : '#171F26',\r\n      color : assets?.ColorSet?.Secondary\r\n    }\" (click)=\"start()\">{{ go }}</button>\r\n  </div>\r\n\r\n</ng-container>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {DefaultAssets} from '../../interface/KonversoInterface';\r\nimport { KonversoService } from '../konverso.service';\r\nimport { TranslateService } from '../translate.service';\r\n\r\n@Component({\r\n  selector: 'bot-first-visit',\r\n  templateUrl: './first-visit.component.html',\r\n  styleUrls: ['./first-visit.component.scss']\r\n})\r\nexport class FirstVisitComponent implements OnInit {\r\n  @Input() firstUsageStory: string[];\r\n  @Input() assets: DefaultAssets;\r\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  public position = 0;\r\n  public current = '';\r\n  public go = '';\r\n\r\n  constructor(translate: TranslateService, private service: KonversoService) {\r\n    service.lang.subscribe((r) => {\r\n      if (service.locale) {\r\n        this.go = translate.translate(service.locale, 'GO');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.current = this.firstUsageStory[this.position];\r\n    const clear = setInterval(() => {\r\n      if (this.position < (this.firstUsageStory.length - 1)) {\r\n        this.current = this.firstUsageStory[++this.position];\r\n      } else {\r\n        clearInterval(clear);\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  goTo(pos: number) {\r\n    this.position = pos;\r\n    this.current = this.firstUsageStory[this.position];\r\n  }\r\n\r\n  start(): void {\r\n    //console.log('OOOKKKK')\r\n    this.ready.emit(true);\r\n  }\r\n\r\n}\r\n","<div class=\"checkbox-calendar\">\r\n    <div class=\"column-title\">\r\n      <div *ngFor=\"let row of rows\" class=\"calendar-row\">\r\n        {{  (columnOverride[row] ? translate.translate(service.locale, columnOverride[row]) : translate.translate(service.locale,row))}}\r\n      </div>\r\n    </div>\r\n    <div class=\"column-value\">\r\n      <div class=\"calendar-row-wrapper\">\r\n        <ng-container *ngFor=\"let c of column\">\r\n          <div class=\"calendar-head\"\r\n               [style]=\"{width : 'calc(100% / '+column.length+')'}\">\r\n               {{ columnOverride[c] ? translate.translate(service.locale, columnOverride[c]) : (c === 'all' ? '' : translate.translate(service.locale , c) )}} \r\n            </div>\r\n        </ng-container>\r\n      </div>\r\n  \r\n      <ng-container *ngFor=\"let row of rows;\">\r\n        <ng-container *ngIf=\"row !== ''\">\r\n          <form [formGroup]=\"form[row]\" class=\"calendar-row-wrapper\">\r\n            <ng-container *ngFor=\"let c of column\">\r\n  \r\n              <div class=\"calendar-checkbox\" [style]=\"{width : 'calc(100% / '+column.length+')'}\">\r\n                <input type=\"checkbox\" [name]=\"row + '_' + c\" [formControlName]=\"c\">\r\n                <label class=\"bot-checkbox-label\" [for]=\"row + '_' + c\"></label>\r\n              </div>\r\n  \r\n            </ng-container>\r\n          </form>\r\n        </ng-container>\r\n  \r\n      </ng-container>\r\n    </div>\r\n  \r\n  </div>\r\n  ","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {debounceTime} from \"rxjs\";\r\nimport { KonversoService } from '../konverso.service';\r\nimport { TranslateService } from '../translate.service';\r\n//import {AnimationsService, FadeSlideInOut} from \"@core/animations\";\r\n\r\ntype ICalendarTemplate = { [key: string]: { [key: string]: boolean } };\r\n\r\n@Component({\r\n  selector: 'custom-checkbox-calendar',\r\n  templateUrl: './custom-checkbox-calendar.component.html',\r\n  styleUrls: ['./custom-checkbox-calendar.component.scss'],\r\n  //animations : [FadeSlideInOut]\r\n})\r\nexport class CustomCheckboxCalendarComponent implements OnInit {\r\n\r\n  @Input() calendarTemplate: ICalendarTemplate = {\r\n    morning: {monday: false, tuhesday: false}\r\n  }\r\n  @Input() columnOverride: { [key: string]: string } = {};\r\n  @Output() calendarChange = new EventEmitter(true);\r\n  @Input() state :boolean = true;\r\n\r\n  public form: { [key: string]: FormGroup } = {};\r\n  public column: string[] = [];\r\n  public rows: string[] = [''];\r\n  private checked: { [key: string]: boolean } = {};\r\n  private calendar_value: any = {}\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder, \r\n    //public animations : AnimationsService,\r\n    public translate: TranslateService, \r\n    public service: KonversoService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const formGroup: ICalendarTemplate = {};\r\n    for (const part in this.calendarTemplate) {\r\n      if (!formGroup[part]) {\r\n        formGroup[part] = {};// morning\r\n      }\r\n      this.rows.push(part);\r\n      for (const day in this.calendarTemplate[part]) {\r\n        // @ts-ignore\r\n        formGroup[part][day] = [this.calendarTemplate[part][day]] //morgin/monday\r\n        this.column.push(day);\r\n      }\r\n      this.column = [...new Set(this.column)];\r\n    }\r\n\r\n    for (const part in formGroup) {\r\n      this.form[part] = this._formBuilder.group(formGroup[part]);\r\n      this.observer(part);\r\n      this.process(this.form[part].value, part);\r\n    }\r\n\r\n  }\r\n\r\n  private observer(part: string) {\r\n    this.form[part].valueChanges.pipe(debounceTime(200)).subscribe(changes => this.process(changes, part))\r\n  }\r\n\r\n  private process(changes: any, part: string) {\r\n    if (changes.all !== this.checked[part]) {\r\n      const keys = Object.keys(this.form[part].controls);\r\n      for (const k of keys) {\r\n        this.form[part].controls[k].patchValue(changes.all, {emitEvent: false, onlySelf: true});\r\n        if (!this.calendar_value[k]) this.calendar_value[k] = {}\r\n        if (!this.calendar_value[k][part]) this.calendar_value[k][part] = changes.all;\r\n        else this.calendar_value[k][part] = changes.all;\r\n        this.calendar_value[k][part] = changes.all;\r\n      }\r\n      this.checked[part] = changes.all;\r\n    } else {\r\n      const keys = Object.keys(changes).filter((e: string) => e !== 'all');\r\n      let counter = keys.length;\r\n      for (const k of keys) {\r\n        if (!this.calendar_value[k]) this.calendar_value[k] = {}\r\n        if (!this.calendar_value[k][part]) this.calendar_value[k][part] = changes[k];\r\n        else this.calendar_value[k][part] = changes[k]\r\n        if (!changes[k]) {\r\n          counter--;\r\n        }\r\n      }\r\n      if (counter === keys.length) {\r\n        this.form[part].controls['all'].patchValue(true, {emitEvent: false, onlySelf: true});\r\n        this.checked[part] = true;\r\n      } else {\r\n        this.checked[part] = false;\r\n        this.form[part].controls['all'].patchValue(false, {emitEvent: false, onlySelf: true});\r\n      }\r\n    }\r\n    this.calendarChange.emit(this.calendar_value)\r\n  }\r\n\r\n}\r\n","<!--<div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"-->\r\n\r\n  <!--<canvas class=\"orb-canvas\"></canvas>\r\n  <div class=\"overlay\">\r\n    <div class=\"overlay__inner\">\r\n    </div>\r\n  </div>-->\r\n  <div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"\r\n     xmlns=\"http://www.w3.org/1999/html\">\r\n  <div class=\"bot-view\">\r\n    <ng-container *ngIf=\"firstVisit && firstUsageStory\">\r\n      <bot-first-visit [firstUsageStory]=\"firstUsageStory\" [assets]=\"assets\"\r\n                       (ready)=\"emit($event)\"></bot-first-visit>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!firstVisit || !firstUsageStory\">\r\n      <button (click)=\"byPassUserInput('exit', 0)\" id=\"exit-btn\" style=\"display: none;\"></button>\r\n\r\n      <div class=\"bot-assistant-wrapper\" *ngIf=\"AssistantMode\">\r\n        <!-- TODO do we need id, remove it? -->\r\n        <!--<div *ngIf=\"!botListening\" class=\"bot-logo\" id=\"botlogo\">\r\n          <img [src]=\"assets.FullSizeLogo\">\r\n        </div>-->\r\n        <!--<div [ngStyle]=\"{'height': '40%'}\" class=\"bot-logo bot-listening\">\r\n          <div [ngStyle]=\"{'transform': 'translateY(-10vh)'}\" class=\"m-carl-notification\">\r\n            <div class=\"m-carl-notification-cue m-cue\">\r\n              <div *ngIf=\"botListening\" class=\"a-cue-voice\" id=\"bot\">\r\n                <div class=\"a-cue-voice-el voice1\"></div>\r\n                <div class=\"a-cue-voice-el voice2\"></div>\r\n                <div class=\"a-cue-voice-el voice3\"></div>\r\n                <div class=\"a-cue-voice-el voice4\"></div>\r\n                <div class=\"a-cue-voice-el\"></div>\r\n              </div>\r\n              <div class=\"a-cue-icon\" id=\"bot-icon\"></div>\r\n            </div>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" [ngStyle]=\"{'height': '40%'}\" class=\"bot\">\r\n          <div class=\"circle1\"></div>\r\n          <div class=\"circle2\"></div>\r\n          <div class=\"circle3\"></div>\r\n        </div>\r\n        \r\n        <div  class=\"bot-discussion-wrapper\" style=\"min-height: 60%; max-height: 60%; height: 60%; /*max-height: 120px;*/\">\r\n          <!-- USER INPUT -->\r\n          <ng-container *ngIf=\"LastUserInput && !afterProcess\">\r\n            <div [@FadeSlideInOutKonversoHeightTest]=\"animations.FadeSlideInOut(animationHeightTTX*2, animationSlideValue)\" class=\"overflow-hidden d-flex flex-column w-100 user-input-container\">\r\n              <div [@FadeSlideInOutKonversoTranslateOutTest]=\"animations.FadeSlideInOut(animationTTX*1.5, animationSlideValue)\" [class.user-input-top]=\"LastUserInput?.message != ''\"  class=\"user-input\">\r\n                <div class=\"data\" [style]=\"{\r\n                        color : assets?.ColorSet?.Secondary\r\n                      }\" [innerHTML]=\"LastUserInput.message\">\r\n                </div>\r\n                <span class=\"time\">{{LastUserInput.date}}</span>\r\n              </div>  \r\n            </div>\r\n          </ng-container>  \r\n\r\n          <!-- TODO remove it -->\r\n<!--           <div>\r\n            disableUserInput: <span>{{ disableUserInput }}</span>\r\n          </div>\r\n          <div>\r\n            showInput: <span>{{ showInput }}</span>\r\n          </div>\r\n          <div>\r\n            afterProcess: <span>{{ afterProcess }}</span>\r\n          </div>\r\n          <div>\r\n            LastBotAnswer.text: <span>{{ LastBotAnswer.text | json}}</span>\r\n          </div>\r\n          <div>\r\n            &nbsp;\r\n          </div>\r\n          <div>\r\n            LastBotAnswer: <span>{{ LastBotAnswer | json}}</span>\r\n          </div>\r\n -->          <!-- TODO remove it -->\r\n\r\n          <!-- BOT ANSWER -->\r\n          <ng-container *ngIf=\"LastBotAnswer\">\r\n            <div class=\"position-relative bot-answer\">\r\n              <div class=\"d-flex flex-column w-100 position-relative bot-answer__text\">\r\n\r\n                <!-- BOT ANSWER TEXT -->\r\n                <ng-container *ngIf=\"LastBotAnswer.text\">\r\n                  <!--<span *ngIf=\"!LastBotAnswer.text.includes('loading-dots')\" id=\"text\"></span><br>\r\n                  <span *ngIf=\"changed && LastBotAnswer.text.includes('loading-dots')\" class=\"fade\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span><br>\r\n                  -->\r\n                  <ng-container *ngIf=\"!LastBotAnswer.text.includes('loading-dots') && changed && showText\">\r\n                    <span [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\" class=\"w-100 justify-content-center\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span>\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"!afterProcess\">\r\n                    <span id=\"loading-creation\"></span>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <ng-container *ngIf=\"LastBotAnswer.medias && LastBotAnswer.medias.length\r\n                && LastBotAnswer.medias[0].required_actions\r\n                && LastBotAnswer.medias[0].required_actions.length > 0\r\n                && !LastBotAnswer.text.includes('loading-dots')\">\r\n                <!-- BOT ANSWER BUTTONS -->\r\n                <div class=\"mt35 d-flex justify-content-center w-100 position-relative bot-answer__buttons\">\r\n                  <ng-container *ngFor=\"let suggest of LastBotAnswer.medias[0].required_actions; let i = index\">\r\n                    <ng-container *ngIf=\"suggest.format === 'button'\">\r\n                        <button\r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"\r\n                          *ngIf=\"suggest.value?.title == 'Terminer' && changed || suggest.value?.title == 'Quit' && changed\" [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"\r\n                          class=\"bot-button bot-button-left show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                        </button>\r\n                        <button\r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"\r\n                          *ngIf=\"suggest.value?.title == 'Nouvelle Demande' && changed || suggest.value?.title == 'New Request' && changed\" [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"\r\n                          class=\"bot-button bot-button-right show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                        </button>\r\n                        <button\r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"\r\n                          *ngIf=\"suggest.value?.title && suggest.value?.title != 'Terminer' && suggest.value?.title != 'Quit' && suggest.value?.title != 'Nouvelle Demande' && suggest.value?.title != 'New Request' && changed\"\r\n                            [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"\r\n                          class=\"bot-button bot-button-grey show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                      </button>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"disableUserInput\">\r\n                  <div class=\"position-relative bot-answer__disable-input\">\r\n                    <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\" class=\"bot-input-disable\">\r\n                      <i>{{ select }}</i>\r\n                    </div>\r\n                  </div>\r\n                </ng-container>\r\n              </ng-container>\r\n              <!-- BOT ANSWER BUTTONS -->\r\n\r\n              <!--<ng-container *ngIf=\"afterProcess && config.AfterProcessScenario.FormElements.length > 0\">\r\n                <div class=\"after-process-form\">\r\n                  <div class=\"after-process-subform\" *ngFor=\"let formElements of config.AfterProcessScenario.FormElements\">\r\n                    <ng-container *ngFor=\"let form of formElements\">\r\n                      <ng-container [ngSwitch]=\"form.type\">\r\n                        <div *ngSwitchCase=\"'checkbox'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\" class=\"bot-checkbox\">\r\n                          <input [checked]=\"form?.checked == true ? 'true': 'false'\" [id]=\"form?.id\" [name]=\"form?.id\" [type]='form?.type' value=\"false\">\r\n                          <label [for]=\"form?.id\" class=\"bot-checkbox-label\">\r\n                            {{ translate.translate(service.locale, form.label) }}\r\n                          </label>\r\n                        </div>\r\n\r\n                        <input [class]=\"form?.class\" [id]=\"form?.id\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\" *ngSwitchCase=\"'text'\"\r\n                        [pattern]=\"form?.pattern\" [placeholder]=\"form?.placeholder\" [type]=\"form?.type\"\r\n                        [value]=\"form?.value\">\r\n\r\n                        <div [class]=\"form?.class\" *ngSwitchCase=\"'div'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\">\r\n                          {{ translate.translate(service.locale, form?.content) }}\r\n                        </div>\r\n\r\n                        <textarea [class]=\"form?.class\" [id]=\"form?.id\" *ngSwitchCase=\"'textarea'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\"\r\n                        [placeholder]=\"translate.translate(service.locale, form?.placeholder)\"></textarea>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </ng-container>-->\r\n\r\n              <custom-checkbox-calendar\r\n                [@FadeSlideInOutKonversoHeightTest]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\"\r\n                *ngIf=\"afterProcess\"\r\n                [state]=\"afterProcess\"\r\n                (calendarChange)=\"bindCalendar($event)\"\r\n                [calendarTemplate]=\"calendarTemplate\"\r\n                [columnOverride]=\"calendarKeyOverride\">\r\n              </custom-checkbox-calendar>\r\n\r\n              <ng-container *ngIf=\"inputType === 'number'\">\r\n                <div [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" class=\"bot-input\">\r\n                                  <!--<input [type]=\"inputType\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" min=\"2\" [max]=\"inputLimit\"\r\n                       [placeholder]=\"currentPlaceHolder\">-->\r\n                  <div class=\"input-number-div\">\r\n                    <div class=\"input-number-div-arrow\">\r\n                      <button (click)=\"changeNumber(1)\" class=\"arrow-up\">\r\n                        <nb-icon [icon]=\"'up_2'\" [size]=\"1.5\"></nb-icon>\r\n                      </button>\r\n\r\n                      <button (click)=\"changeNumber(-1)\" class=\"arrow-down\">\r\n                        <nb-icon [icon]=\"'down_2'\" [size]=\"1.5\"></nb-icon>\r\n                      </button>\r\n                    </div>\r\n\r\n                    {{ userInput }}\r\n                  </div>\r\n\r\n                  <div class=\"bot-container-btn\">\r\n                    <button class=\"bot-button send-btn input-number-btn\" [style]=\"{\r\n                      backgroundColor : assets?.ColorSet?.Primary,\r\n                      color : assets?.ColorSet?.Secondary\r\n                  }\" (click)=\"_send()\" [disabled]=\"!userInput\">\r\n\r\n                      <ng-container *ngIf=\"inputType === 'number'\">\r\n                        {{ sendBtn }}\r\n                      </ng-container>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <div *ngIf=\"!afterProcess\" class=\"position-relative bot-input-wrapper\">\r\n            <ng-container *ngIf=\"afterProcess && config.AfterProcessScenario.FormButtons.length > 0\">\r\n              <!--<button [class]=\"btn.class\" *ngFor=\"let btn of config.AfterProcessScenario.FormButtons\" [ngStyle]=\"{'display': btn?.display ? btn.display: 'block'}\">\r\n                {{ translate.translate(service.locale, btn.label) }}\r\n              </button>-->\r\n              <button (click)=\"getCalendar()\" class=\"primary rounded validate-after-btn\" style=\"display: inline-block;\">\r\n                {{ translate.translate(service.locale, 'VALIDATE_AVAILABILITY') }}\r\n              </button>\r\n\r\n              <button class=\"rounded secondary skip-after-btn\" style=\"display: inline-block;\">\r\n                {{ translate.translate(service.locale, 'SKIP') }}\r\n              </button>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"!disableUserInput && showInput\">\r\n              <div class=\"d-flex flex-column w-100 position-realtive bot-input\" id=\"bot-input-div\">\r\n                <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValueAdd)\" class=\"w-100 h-100 d-flex flex-column position-absolute bot-input__controls\">\r\n                  <ng-container *ngIf=\"inputType === 'text'\">\r\n                    <textarea [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" [maxlength]=\"inputLimit\"\r\n                      [placeholder]=\"currentPlaceHolder\"></textarea>\r\n                  </ng-container>\r\n\r\n                  <div *ngIf=\"inputType !== 'number'\" class=\"bot-container-btn\">\r\n                    <button class=\"bot-button send-btn\" [style]=\"{\r\n                      backgroundColor : assets?.ColorSet?.Primary,\r\n                      color : assets?.ColorSet?.Secondary}\"\r\n                      (click)=\"_send()\"\r\n                      [disabled]=\"!userInput\">\r\n\r\n                      <ng-container *ngIf=\"inputType !== 'number'\">\r\n                        {{ sendBtnMsg }}\r\n                      </ng-container>\r\n\r\n                      <!--<ng-container *ngIf=\"inputType === 'number'\">\r\n                        {{ sendBtn }}\r\n                      </ng-container>-->\r\n                    </button>\r\n\r\n                    <button *ngIf=\"inputType !== 'number' && IsMobile\" class=\"bot-button-screen\">\r\n                      <nb-icon [icon]=\"'scan_11'\" [size]=\"1.5\"></nb-icon>\r\n                      {{ btnScreen }}\r\n                    </button>\r\n\r\n                    <button *ngIf=\"inputType !== 'number'\" class=\"bot-button-attach\" (click)=\"openUpload.emit(true)\">\r\n                      {{ fileNb }}\r\n\r\n                      <ng-container *ngIf=\"fileNb <= 1\">\r\n                        {{ translate.translate(service.locale, 'ATTACHMENT') }}\r\n                      </ng-container>\r\n\r\n                      <ng-container *ngIf=\"fileNb > 1\">\r\n                        {{ translate.translate(service.locale, 'ATTACHMENTS') }}\r\n                      </ng-container>\r\n\r\n                      <nb-icon [icon]=\"'attachment'\" [size]=\"1.5\"></nb-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <!-- TODO remove it -->\r\n            <!-- <ng-container *ngIf=\"disableUserInput\">\r\n              <div class=\"bot-input-disable\">\r\n                <i>{{ select }}</i>\r\n               </div>\r\n            </ng-container> -->\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"bot-chat-wrapper\" *ngIf=\"!AssistantMode\">\r\n        {{AssistantMode}}\r\n        <div class=\"bot-discussion-wrapper\" #scrollMe [scrollTop]=\"scrollMe.scrollTo(0, 9999999)\">\r\n          <div class=\"bot-chat\">\r\n            <ng-container *ngFor=\"let entry of displayData\">\r\n              <ng-container *ngIf=\"entry.date\">\r\n                <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" class=\"user-input\">\r\n                  <div class=\"data\" [style]=\"{\r\n                     backgroundColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Secondary\r\n                    }\" [innerHTML]=\"entry.message\">\r\n                  </div>\r\n                  <span class=\"time\">{{entry.date}}</span>\r\n                </div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"!entry.date\">\r\n                <div class=\"bot-answer\">\r\n                  <ng-container *ngIf=\"entry.text\">\r\n                    <span *ngIf=\"changed\" class=\"\" [innerHTML]=\"entry.text | safeHtml\"></span>\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"entry.medias && entry.medias.length\r\n                   && entry.medias[0].required_actions\r\n                   && entry.medias[0].required_actions.length\">\r\n                    <ng-container *ngFor=\"let suggest of entry.medias[0].required_actions\">\r\n                      <ng-container *ngIf=\"suggest.format === 'button'\">\r\n                        <button *ngIf=\"changed\" [style]=\"{\r\n                     borderColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Primary\r\n            }\" class=\"bot-button\" (click)=\"byPassUserInput(suggest?.value?.onClick)\"\r\n                                [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \"></button>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </ng-container>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"bot-input-wrapper\">\r\n          <div class=\"bot-input\" *ngIf=\"!disableUserInput && showInput\">\r\n            <input type=\"text\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" maxlength=\"200\"\r\n                   [placeholder]=\"currentPlaceHolder\">\r\n            <button *ngIf=\"changed\" class=\"bot-button\" [style]=\"{\r\n                     backgroundColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Secondary\r\n            }\" (click)=\"_send()\" [disabled]=\"!userInput\">{{ sendBtn }}\r\n            </button>\r\n          </div>\r\n          <div class=\"bot-input-disable\" *ngIf=\"disableUserInput\">\r\n            <i>{{ select }}</i>\r\n          </div>\r\n        </div>\r\n        <div class=\"bot-logo\">\r\n          <img [src]=\"assets.FullSizeLogo\">\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </div>\r\n</div>\r\n","import {Component, EventEmitter, Inject, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {DefaultAssets, KonversoInterface, OpenChatBotResponse, UserInput} from '../../interface/KonversoInterface';\r\nimport {KonversoService} from '../konverso.service';\r\nimport {TranslateService} from '../translate.service';\r\nimport {\r\n    AnimationsService,\r\n    FadeSlideInOut,\r\n    FadeSlideInOutKonversoOpacityOut,\r\n    FadeSlideInOutKonversoTranslateOut,\r\n    FadeSlideInOutKonversoHeight\r\n} from 'ngx-nowbrains-animations';\r\n\r\ndeclare var PIXI: any;\r\nconst defaultInputType = 'text';\r\nconst defaultInputLimit = 300;\r\nconst ANIMATION_TTX = 750;\r\nconst ANIMATION_TTX_ADD = 250;\r\nconst ANIMATION_SLIDE_VALUE = -50;\r\nconst ANIMATION_SLIDE_VALUE_ADD = -25;\r\nconst ANIMATION_HEIGHT_TTX = 1250;\r\n\r\n\r\n/* TODO remove it */\r\nimport {animate, keyframes, style, transition, trigger} from \"@angular/animations\";\r\nconst ANIMATION_TYPE_CUBIC_BEZIER = 'cubic-bezier(0.39, 0.58, 0.57, 1)';\r\n\r\nexport const FadeSlideInOutKonversoTranslateOutTest = trigger('FadeSlideInOutKonversoTranslateOutTest', [\r\n    transition(':enter', [\r\n      style({opacity: 0, top: '{{percent_start}}%'}),\r\n      animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, style({opacity: 1, top: '0%'}))\r\n    ]),\r\n    transition(':leave', [\r\n      style({opacity: 1}),\r\n      animate('{{ttx}}ms ease-in-out', style({opacity: 0}))\r\n    ])\r\n  ])\r\n\r\n  export const FadeSlideInOutKonversoHeightTest = trigger('FadeSlideInOutKonversoHeightTest', [\r\n    transition(':enter',[\r\n        style({height: 0}),\r\n        animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, style({height: '*'}))\r\n    ]),\r\n    transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('{{ttx}}ms ease-in-out', style({opacity: 0}))\r\n      ])\r\n  ]);\r\n/* TODO remove it */\r\n\r\n@Component({\r\n    selector: 'bot-full-screen',\r\n    templateUrl: './desktop-full-screen.component.html',\r\n    styleUrls: ['./desktop-full-screen.component.css'],\r\n    //animations: [FadeSlideInOut, FadeSlideInOutKonversoOpacityOut, FadeSlideInOutKonversoTranslateOut, FadeSlideInOutKonversoHeight]\r\n    animations: [FadeSlideInOut, FadeSlideInOutKonversoOpacityOut, FadeSlideInOutKonversoTranslateOut, FadeSlideInOutKonversoHeight, FadeSlideInOutKonversoTranslateOutTest, FadeSlideInOutKonversoHeightTest] // TODO remove it\r\n})\r\nexport class DesktopFullScreenComponent implements OnChanges, OnInit {\r\n    @Input() AssistantMode: boolean = false;\r\n    @Input() assets: DefaultAssets;\r\n    @Input() firstVisit: boolean = false;\r\n    @Input() firstUsageStory: string[];\r\n    @Input() displayData: (UserInput | OpenChatBotResponse)[];\r\n    @Input() disableUserInput: boolean;\r\n    @Input() LastUserInput: UserInput;\r\n    @Input() LastBotAnswer: OpenChatBotResponse;\r\n    @Input() PlaceHolder: string[];\r\n    @Input() IsMobile: boolean = false;\r\n    @Input() showInput: boolean;\r\n    @Input() NumberPlaceHolder: string[];\r\n    @Input() afterProcess = false;\r\n    @Input() fileNb = 0;\r\n\r\n    @Output() readySend: EventEmitter<boolean> = new EventEmitter<boolean>(false);\r\n    @Output() send: EventEmitter<UserInput> = new EventEmitter<UserInput>(null);\r\n    @Output() sendBotCommand: EventEmitter<string> = new EventEmitter<string>(null);\r\n    @Output() sendEvent: EventEmitter<string> = new EventEmitter<string>(null);\r\n    @Output() sendCalendar: EventEmitter<any> = new EventEmitter<any>(null);\r\n    @Output() openUpload : EventEmitter<boolean> = new EventEmitter<boolean>(false)\r\n    public userInput: string;\r\n    public currentPlaceHolder: string = '';\r\n    public sendBtn = '';\r\n    public sendBtnMsg = '';\r\n    public select = '';\r\n    public changed = false;\r\n    public botListening = false;\r\n    public showWrapper = true;\r\n    public showText = true;\r\n    public inputType: string = defaultInputType;\r\n    public inputLimit: number = defaultInputLimit;\r\n    private newMessage = false;\r\n    private messageCurrent = '';\r\n    private msgArray = [];\r\n    private botListeningTimer = 0;\r\n    private anim_done = false;\r\n    private reloaded = false;\r\n    private timer;\r\n    public btnScreen = '';\r\n    public nbAttachments = 0;\r\n    config: KonversoInterface;\r\n    private days = [];\r\n    public calendarAvailability = {};\r\n    public calendarTemplate = {\r\n        morning: {all: true, monday: true, tuesday: true, wednesday: true, thursday: true, friday: true},\r\n        afternoon: {all: true, monday: true, tuesday: true, wednesday: true, thursday: true, friday: true}\r\n    }\r\n    public calendarKeyOverride = {\r\n        morning: 'MORNING_ALL',\r\n        afternoon: 'AFTERNOON_ALL',\r\n        monday: 'MONDAY',\r\n        tuesday: 'TUESDAY',\r\n        wednesday: 'WEDNESDAY',\r\n        thursday: 'THURSDAY',\r\n        friday: 'FRIDAY'\r\n    }\r\n\r\n    public animationTTX = ANIMATION_TTX;\r\n    public animationTtxAdd = ANIMATION_TTX_ADD;\r\n    public animationSlideValue = ANIMATION_SLIDE_VALUE;\r\n    public animationSlideValueAdd = ANIMATION_SLIDE_VALUE_ADD;\r\n    public animationHeightTTX = ANIMATION_HEIGHT_TTX;\r\n\r\n    changeNumber(value: number) {\r\n        if ((+this.userInput + value) > 0) {\r\n            this.userInput = (+this.userInput + value).toString();\r\n        }\r\n    }\r\n\r\n    constructor(public translate: TranslateService, public service: KonversoService, public animations: AnimationsService,\r\n        @Inject('__NgxKonverso__') config: KonversoInterface) {\r\n        service.lang.subscribe((r) => {\r\n            if (service.locale) {\r\n                this.sendBtn = translate.translate(service.locale, 'SEND');\r\n                this.sendBtnMsg = translate.translate(service.locale, 'SEND_MESSAGE');\r\n                this.select = translate.translate(service.locale, 'SELECT');\r\n                this.btnScreen = translate.translate(service.locale, 'SCREENSHOT');\r\n\r\n                this.days = [\r\n                    'MONDAY',\r\n                    'TUESDAY',\r\n                    'WEDNESDAY',\r\n                    'THURSDAY',\r\n                    'FRIDAY',\r\n                    'SATURDAY',\r\n                    'SUNDAY',\r\n                    'MONDAY',\r\n                ];\r\n            }\r\n        });\r\n\r\n        this.config = config;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.afterProcess) {\r\n            this.LastUserInput = null;\r\n            this.LastBotAnswer.text = this.config.AfterProcessScenario.BotMessage[this.service.locale];\r\n\r\n            if (this.config.AfterProcessScenario.FormElements[0][0].label == 'Jour 1') {\r\n                let day1 = this.days[new Date().getDay() - 1];\r\n                let day2 = this.days[new Date().getDay()];\r\n                let day3 = this.days[new Date().getDay() + 1];\r\n                this.config.AfterProcessScenario.FormElements[0][0].label = day1;\r\n                this.config.AfterProcessScenario.FormElements[1][0].label = day2;\r\n                this.config.AfterProcessScenario.FormElements[2][0].label = day3;\r\n            }\r\n        }\r\n\r\n\r\n        this.changed = false;\r\n\r\n        if (document.getElementById('text') && !this.LastBotAnswer?.text.includes('loading-dots')) {\r\n            document.getElementById('text').innerHTML = '';\r\n        }\r\n\r\n        if (this.LastBotAnswer?.text.includes('<number>') && this.LastBotAnswer?.text.includes('</number>')) {\r\n            this.userInput = '1';\r\n            this.inputType = 'number';\r\n            this.inputLimit = 999;\r\n            this.currentPlaceHolder = this.NumberPlaceHolder[Math.floor(Math.random() * this.NumberPlaceHolder.length)];\r\n        } else {\r\n            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\r\n            this.inputType = defaultInputType;\r\n            this.inputLimit = defaultInputLimit;\r\n        }\r\n\r\n\r\n        if (!this.anim_done) {\r\n            let t2 = setInterval(() => {\r\n                if (this.LastBotAnswer && !this.LastBotAnswer?.text.includes('loading-dots') && this.anim_done) {\r\n                    clearInterval(t2);\r\n                    const string = this.LastBotAnswer?.text\r\n                        .split('<br/>').join(` `)\r\n                        .split('&eacute;').join('é')\r\n                        .split('&egrave;').join('è')\r\n                        .replace(/<[^>]*>?/gm, '')\r\n                        .split('&nbsp;').join('');\r\n\r\n                    this.msgArray = string.split('');\r\n                    if (this.messageCurrent !== string) {\r\n                        this.newMessage = true;\r\n                        this.messageCurrent = string;\r\n                        this.launchLoop();\r\n                    }\r\n                    //this.looper(array, timer);\r\n                }\r\n            }, 100);\r\n        } else {\r\n            const string = this.LastBotAnswer?.text\r\n                .split('<br/>').join(` `)\r\n                .split('&eacute;').join('é')\r\n                .split('&egrave;').join('è')\r\n                .replace(/<[^>]*>?/gm, '')\r\n                .split('&nbsp;').join('');\r\n\r\n            this.msgArray = string.split('');\r\n            if (this.messageCurrent !== string && string !== '') {\r\n                this.newMessage = true;\r\n                this.messageCurrent = string;\r\n                this.launchLoop();\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.changed = true;\r\n        }, 100);\r\n    }\r\n\r\n    bindCalendar($event: any) {\r\n        //console.log('bindCalendar $event', $event)\r\n        delete $event.all\r\n        this.calendarAvailability = $event;\r\n    }\r\n\r\n    getCalendar() {\r\n        this.sendCalendar.emit(this.calendarAvailability);\r\n    }\r\n\r\n    launchLoop() {\r\n        this.timer = setInterval(() => {\r\n            if (this.msgArray.length == 0) {\r\n                clearInterval(this.timer);\r\n            }\r\n            if (this.newMessage) {\r\n                if (document.getElementById('text')) {\r\n                    document.getElementById('text').innerHTML = '';\r\n                }\r\n\r\n                this.newMessage = false;\r\n                //this.msgArray = this.messageCurrent.split(\"\");\r\n                clearInterval(this.timer);\r\n                this.launchLoop();\r\n            }\r\n            this.looper();\r\n        }, 60);\r\n    }\r\n\r\n    looper() {\r\n        if (this.msgArray.length > 0 && !this.reloaded) {\r\n            if (document.getElementById('text')) {\r\n                document.getElementById('text').innerHTML += this.msgArray.shift();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.inputType = defaultInputType;\r\n        this.inputLimit = defaultInputLimit;\r\n        if (this.PlaceHolder) {\r\n            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\r\n            setInterval(() => {\r\n                this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    userWriting(key: any) {\r\n        if (key.code === 'Enter') {\r\n            this.botListening = false;\r\n            this.botListeningTimer = 0;\r\n        } else if (key.code === 'Backspace') {\r\n\r\n        } else {\r\n            this.botListening = true;\r\n            if (this.botListeningTimer == 0) {\r\n                this.botListeningTimer += 2;\r\n            } else if (this.botListeningTimer < 5) {\r\n                this.botListeningTimer += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    public emit($event) {\r\n        this.firstVisit = false;\r\n        this.readySend.emit(true);\r\n    }\r\n\r\n    public _send() {\r\n        if (this.LastBotAnswer?.endOfTopic && this.LastUserInput) {\r\n            this.LastUserInput.message = '';\r\n        }\r\n\r\n        this.botListening = false;\r\n        const userData: UserInput = {\r\n            message: this.userInput,\r\n            date: new Date().toLocaleTimeString(navigator.language, {\r\n                hour: '2-digit',\r\n                minute: '2-digit'\r\n            })\r\n        };\r\n        this.send.emit(userData);\r\n        this.userInput = null;\r\n    }\r\n\r\n    async scroll(scrollHeight: number) {\r\n        return new Promise<number>((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(0);\r\n            }, 300);\r\n        });\r\n\r\n    }\r\n\r\n    byPassUserInput(botdata: string, i?: number) {\r\n        this.sendBotCommand.emit(botdata);\r\n    }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {KonversoService} from './konverso.service';\r\nimport {ColorSet, DefaultAssets, KonversoAnswer, OpenChatBotResponse, UserInput} from '../interface/KonversoInterface';\r\nimport {BotMessageSample} from '../Sample/BotMessageSample';\r\nimport {DotLoaderTemplate} from '../Sample/DotLoader';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ModalAddAttachmentsComponent} from './modal-add-attachments/modal-add-attachments.component';\r\n\r\n// @ts-ignore\r\n@Component({\r\n    selector: 'ngx-konverso',\r\n    templateUrl: 'konverso.component.html',\r\n    styleUrls: ['../../assets/main.scss']\r\n})\r\nexport class KonversoComponent implements OnInit {\r\n    public _ready: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() sended: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() sendCalendar: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() files: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n    @Input() showInput = true;\r\n    @Input() afterProcess = false;\r\n    @Input() fileNb = 0;\r\n    @Input() fileInput : HTMLInputElement;\r\n    public documentList : Array<any> = []\r\n    public query: string;\r\n    public isMobile: boolean;\r\n    public assets: DefaultAssets;\r\n    public firstVisit: boolean;\r\n    public firstUsageStory: string[];\r\n    public AssistantMode = false;\r\n    public colorSet: ColorSet;\r\n    public History: (UserInput | OpenChatBotResponse)[];\r\n    public disableUserInput = false;\r\n    public LastUserInput: UserInput;\r\n    public LastBotAnswer: OpenChatBotResponse;\r\n    public PlaceHolder: string[];\r\n    public NumberPlaceHolder: string[];\r\n    public Welcome: string;\r\n    public input !: HTMLInputElement;\r\n\r\n    constructor(private service: KonversoService, private dialog: MatDialog) {\r\n        if (service._auth) {\r\n            this.service.authentication.subscribe(() => {\r\n                this.ngOnInit();\r\n            });\r\n        }\r\n        this.service.emulationTrigger.subscribe((response: any) => {\r\n            console.log(response);\r\n            if (response) {\r\n                if (!this.LastUserInput) {\r\n                    this.LastUserInput = {\r\n                        message: '',\r\n                        date: '',\r\n                        error: null\r\n                    };\r\n                }\r\n                this.LastUserInput.message += ' ' + response.input;\r\n                this.LastUserInput.date = new Date().toISOString();\r\n                this.triggerKbotResponse(response);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isMobile = this._isMobile();\r\n        this.assets = this.service.assets;\r\n        this.firstVisit = this.service.firstVisit;\r\n        this.firstUsageStory = this.service.firstUsageStory;\r\n        this.AssistantMode = this.service.AssistantMode;\r\n        this.PlaceHolder = this.service.PlaceHolder;\r\n        this.NumberPlaceHolder = this.service.NumberPlaceHolder;\r\n        this.Welcome = this.service.Welcome;\r\n        this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\r\n        this.History = [];\r\n        if (this.service.ColorSet) {\r\n            this.colorSet = this.service.ColorSet;\r\n        }\r\n        this._ready.subscribe((ready: boolean) => {\r\n            if (ready) {\r\n                this.firstVisit = false;\r\n                this.service.firstVisit = false;\r\n                this.ready.emit(ready);\r\n            }\r\n        });\r\n        if (this.Welcome) {\r\n            const customWelcome: OpenChatBotResponse = BotMessageSample;\r\n            customWelcome.text = this.Welcome;\r\n            this.LastBotAnswer = customWelcome;\r\n            this.History.push(customWelcome);\r\n        }\r\n    }\r\n\r\n    handleSendCalendar($event: any) {\r\n        this.sendCalendar.emit($event);\r\n    }\r\n\r\n    async send($event: UserInput) {\r\n        if ($event.message === 'exit') {\r\n            this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\r\n            return false;\r\n        }\r\n        this.sended.emit(true);\r\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\r\n        console.log($event);\r\n        if (parseInt($event.message) == NaN) {\r\n            this.History.push($event);\r\n        }\r\n\r\n        //console.log(parseInt($event.message));\r\n        if (this.AssistantMode) {\r\n            if (this.LastUserInput) {\r\n                if (parseInt($event.message) == NaN) {\r\n                    this.LastUserInput.message += ' ' + $event.message.replace(/\\n/g, '<br>');\r\n                    this.LastUserInput.date = $event.date;\r\n                }\r\n            } else {\r\n                this.LastUserInput = $event;\r\n                this.LastUserInput.message = ' ' + $event.message.replace(/\\n/g, '<br>');\r\n                this.LastUserInput.date = $event.date;\r\n            }\r\n        } else {\r\n            this.LastUserInput = $event;\r\n            this.LastUserInput.message = ' ' + $event.message.replace(/\\n/g, '<br>');\r\n            this.LastUserInput.date = $event.date;\r\n        }\r\n\r\n        const index: number = this.History.length - 1;\r\n        const response: KonversoAnswer = await this.service.send($event.message).catch((err: string) => {\r\n            //@ts-ignore\r\n            this.History[index].error = true;\r\n        });\r\n        this.triggerKbotResponse(response);\r\n    }\r\n\r\n    async sendBotCommand($event: string, push: boolean = true) {\r\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\r\n        if ($event === 'yes_response' || $event === 'no_response' || $event == 'exit') {\r\n            this.LastUserInput = null;\r\n        }\r\n        const response: KonversoAnswer = await this.service.send($event).catch((err: string) => {\r\n            console.log('We got an error ', err);\r\n        });\r\n        if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\r\n            response.response.medias[0].required_actions.length) {\r\n            this.disableUserInput = true;\r\n        } else {\r\n            this.disableUserInput = false;\r\n        }\r\n        if (response && response.response && push) {\r\n            this.LastBotAnswer = response.response;\r\n            this.History.push(response.response);\r\n        } else if (response && response.response && !push) {\r\n            this.LastUserInput = null;\r\n            this.LastBotAnswer = response.response;\r\n            this.History.push(response.response);\r\n        } else {\r\n            this.LastUserInput = null;\r\n        }\r\n    }\r\n\r\n    onFileSelected(event: any) {\r\n        console.log('On ffile select', event),\r\n            Array.from(event.target.files).forEach((f: any) => {\r\n                console.log('Document list feed', f)\r\n                this.documentList.push(f);\r\n            });\r\n    }\r\n\r\n    addFiles() {\r\n        if (this.fileInput) {\r\n            console.log('OK fileInput exist');\r\n            this.fileInput.onchange = (event:Event) => {\r\n                this.onFileSelected(event);\r\n            }\r\n            const dialog = this.dialog.open(ModalAddAttachmentsComponent, {\r\n                data: {\r\n                    panelClass: 'modal-xl-preview',\r\n                    data: {input: this.fileInput, documentList : this.documentList}\r\n                }\r\n            });\r\n\r\n            dialog.afterClosed().subscribe((documentList: Array<any>) => {\r\n                this.documentList = documentList;\r\n                console.log(this.documentList)\r\n                this.files.emit(this.documentList);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private triggerKbotResponse(response: any): void {\r\n        if (response && response.response) {\r\n            if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\r\n                response.response.medias[0].required_actions.length) {\r\n                this.disableUserInput = true;\r\n            } else {\r\n                this.disableUserInput = false;\r\n            }\r\n            this.LastBotAnswer = response.response;\r\n            this.History.push(response.response);\r\n        }\r\n    }\r\n\r\n    private _isMobile(): boolean {\r\n\r\n        const isMobile = {\r\n            Android: (): boolean => {\r\n                return !!navigator.userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: (): boolean => {\r\n                return !!navigator.userAgent.match(/BlackBerry/i);\r\n            },\r\n            iOS: (): boolean => {\r\n                return !!navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n            },\r\n            Opera: (): boolean => {\r\n                return !!navigator.userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: (): boolean => {\r\n                return !!navigator.userAgent.match(/IEMobile/i) || !!navigator.userAgent.match(/WPDesktop/i);\r\n            },\r\n            any: (): boolean => {\r\n                return !!(isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n            }\r\n        };\r\n        return isMobile.any();\r\n    }\r\n}\r\n","<bot-full-screen [class]=\"isMobile ? 'bot-mobile' : ''\"\r\n                 [assets]=\"assets\"\r\n                 [firstVisit]=\"firstVisit\"\r\n                 [firstUsageStory]=\"firstUsageStory\"\r\n                 (send)=\"send($event)\"\r\n                 (sendBotCommand)=\"sendBotCommand($event)\"\r\n                 [displayData]=\"History\"\r\n                 [disableUserInput]=\"disableUserInput\"\r\n                 [LastBotAnswer]=\"LastBotAnswer\"\r\n                 [LastUserInput]=\"LastUserInput\"\r\n                 [AssistantMode]=\"AssistantMode\"\r\n                 [PlaceHolder]=\"PlaceHolder\"\r\n                 [NumberPlaceHolder]=\"NumberPlaceHolder\"\r\n                 [IsMobile]=\"isMobile\"\r\n                 (readySend)=\"_ready.emit($event)\"\r\n                 [showInput]=\"showInput\"\r\n                 [afterProcess]=\"afterProcess\"\r\n                 [fileNb]=\"fileNb\"\r\n                 (sendCalendar)=\"handleSendCalendar($event)\"\r\n                 (openUpload)=\"addFiles()\"\r\n></bot-full-screen>\r\n\r\n\r\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport {KonversoComponent} from './konverso.component';\r\nimport {KonversoInterface} from '../interface/KonversoInterface';\r\nimport {KonversoService} from './konverso.service';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {DesktopFullScreenComponent} from './desktop-full-screen/desktop-full-screen.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FirstVisitComponent} from './first-visit/first-visit.component';\r\nimport {SafeHtmlPipe} from './pipe/safe-html.pipe';\r\nimport {NowboardIconModule, NowboardIconService} from 'nowboard-icon';\r\nimport {CustomCheckboxCalendarComponent} from './custom-checkbox-calendar/custom-checkbox-calendar.component';\r\nimport {ModalAddAttachmentsComponent} from './modal-add-attachments/modal-add-attachments.component';\r\n\r\n\r\n// @ts-ignore\r\n@NgModule({\r\n  declarations: [KonversoComponent, DesktopFullScreenComponent, FirstVisitComponent, SafeHtmlPipe, CustomCheckboxCalendarComponent, ModalAddAttachmentsComponent],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    NowboardIconModule.forRoot({ //light theme color\r\n      disabled_color: \"#5E7290\",\r\n      primary: \"#001B66\"}),\r\n  ],\r\n  providers : [KonversoService, NowboardIconService],\r\n  exports: [KonversoComponent, NowboardIconModule]\r\n})\r\nexport class KonversoModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: KonversoModule) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'KonversoModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\n\r\n  public static forRoot(config: KonversoInterface): ModuleWithProviders<KonversoModule> {\r\n    return {\r\n      ngModule: KonversoModule,\r\n      providers: [\r\n        {provide: '__NgxKonverso__', useValue: config},\r\n        KonversoService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of konverso\r\n */\r\nexport * from './interface/KonversoInterface';\r\nexport * from './lib/konverso.service';\r\nexport * from './lib/konverso.component';\r\nexport * from './lib/konverso.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.TranslateService","i2.KonversoService","i1","_c0","_c1","i2.TranslateService","i3.KonversoService","i4","i5","i6","i7.FirstVisitComponent","i8.CustomCheckboxCalendarComponent","i9.SafeHtmlPipe","i1.KonversoService","i2"],"mappings":"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"}