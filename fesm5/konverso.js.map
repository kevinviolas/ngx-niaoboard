{"version":3,"file":"konverso.js","sources":["ng://konverso/lib/konverso.service.ts","ng://konverso/Sample/BotMessageSample.ts","ng://konverso/Sample/DotLoader.ts","ng://konverso/lib/konverso.component.ts","ng://konverso/lib/translate.service.ts","ng://konverso/lib/desktop-full-screen/desktop-full-screen.component.ts","ng://konverso/lib/first-visit/first-visit.component.ts","ng://konverso/lib/pipe/safe-html.pipe.ts","ng://konverso/lib/konverso.module.ts","ng://konverso/konverso.ts"],"sourcesContent":["import {EventEmitter, Inject, Injectable} from '@angular/core';\nimport {ColorSet, DefaultAssets, KonversoInterface, KonversoQuery, KonversoUser} from '../interface/KonversoInterface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\nimport * as mustache from 'mustache';\n\n@Injectable()\nexport class KonversoService {\n    public authentication: EventEmitter<KonversoUser> = new EventEmitter<KonversoUser>();\n    public assets: DefaultAssets;\n    public firstVisit = false;\n    public firstUsageStory: string[];\n    public ColorSet: ColorSet;\n    public PlaceHolder: string[];\n    public NumberPlaceHolder: string[];\n    public AssistantMode = false;\n    public Welcome: string;\n    public readyState: boolean = false;\n    public locale: string;\n    private token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n    // tslint:disable-next-line:variable-name\n    private _token = this.token.asObservable();\n    private user: KonversoUser;\n    private header: HttpHeaders;\n    private endpoint: string;\n    public _auth: boolean;\n    public lang = new BehaviorSubject('');\n    public customData: BehaviorSubject<{ [key: string]: any }> = new BehaviorSubject<{ [key: string]: any }>(null);\n    public emulationTrigger: BehaviorSubject<any> = new BehaviorSubject(null);\n\n    constructor(@Inject('__NgxKonverso__') config: KonversoInterface, private http: HttpClient) {\n        this.buildHeaders();\n        this.initInstance(config);\n    }\n\n    /**\n     * Send Query To backend server and get a response\n     * @param query\n     */\n    public async send(query: string): Promise<string | any> {\n        return new Promise((resolve, reject) => {\n            if (query && query.replace(new RegExp(' ', 'g'), '')) {\n                if (this.header) {\n                    const preparedData = this.buildQuery(query);\n                    const options: any = {\n                        headers: this.header\n                    };\n                    this.http.post(this.endpoint + '?t=' + new Date().getTime(), preparedData, options)\n                        .subscribe((data: any) => {\n                            resolve(data);\n                        });\n                } else {\n                    reject(new Error('Header is not set, please provide a token though user setting or though module configuration'));\n                }\n            } else {\n                reject(new Error('Current input is empty, please try again'));\n            }\n        });\n    }\n\n    /**\n     * Emulate user entry Query To backend server and get a response\n     * @param query\n     */\n    public async sendTriggerEmulation(query: string): Promise<void> {\n        const response = await this.send(query).catch((err: any) => {\n            console.log('error trigger emulation', err);\n        });\n        if (response) {\n            this.emulationTrigger.next({input : query, ...response})\n        }\n    }\n\n    /**\n     * @private\n     * Generate Header for backend call\n     */\n    private buildHeaders() {\n        this._token.subscribe((token: string) => {\n            const bearer: string = 'Bearer ' + token;\n            this.header = new HttpHeaders({\n                //'Content-Type': 'application/json',\n                // 'Access-Control-Allow-Origin': window.location.origin,\n                'Authorization': bearer\n            });\n        });\n    }\n\n    /**\n     * @param config\n     * @private\n     * Initialize Data for User Instance\n     */\n    private initInstance(config: KonversoInterface) {\n        this._auth = !!config.auth;\n        if (config.endpoint) {\n            this.endpoint = config.endpoint;\n            if (config.AssistantMode) {\n                this.AssistantMode = config.AssistantMode;\n            }\n\n            if (config.defaultAssets) {\n                this.assets = config.defaultAssets;\n                if (config.defaultAssets.ColorSet) {\n                    this.ColorSet = config.defaultAssets.ColorSet;\n                }\n            }\n            if (config.auth) {\n                this.authentication.subscribe((user: KonversoUser) => {\n                    if (!user.lang && config.lang) {\n                        user.lang = config.lang;\n                    }\n                    this.locale = user?.lang;\n                    this.lang.next(this.locale);\n                    if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\n                        this.PlaceHolder = config.InputPlaceHolder[this.locale];\n                    }\n                    if (config.InputNumberPlaceHolder && config.InputNumberPlaceHolder[this.locale]) {\n                        this.NumberPlaceHolder = config.InputNumberPlaceHolder[this.locale];\n                    }\n                    if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\n                        this.Welcome = mustache.render(config.BotInitMessage.Welcome[this.locale], user);\n                    }\n                    if (user?.token) {\n                        this.token.next(user?.token);\n                    }\n                    if (user?.firstVisit) {\n                        this.firstVisit = true;\n                        delete user.firstVisit;\n                        if (config?.BotInitMessage?.FirstUsage &&\n                            this.locale &&\n                            config?.BotInitMessage?.FirstUsage[this.locale]) {\n                            this.firstUsageStory = [];\n                            for (const history of config.BotInitMessage.FirstUsage[this.locale]) {\n                                this.firstUsageStory.push(mustache.render(history, user));\n                            }\n                        }\n                    }\n                    this.user = user;\n                    this.readyState = true;\n                });\n            } else if (config.lang) {\n                this.locale = config.lang;\n                this.lang.next(this.locale);\n                if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\n                    this.PlaceHolder = config.InputPlaceHolder[this.locale];\n                }\n                if (config.InputNumberPlaceHolder && config.InputNumberPlaceHolder[this.locale]) {\n                    this.NumberPlaceHolder = config.InputNumberPlaceHolder[this.locale];\n                }\n                if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\n                    this.Welcome = config.BotInitMessage.Welcome[this.locale];\n                }\n                this.user = {\n                    userId: this.guid(),\n                    lang: config.lang\n                };\n                this.readyState = true;\n            }\n            if (config.token) {\n                this.token.next(config.token);\n            }\n        } else {\n            return new Error('Please provide endpoint');\n        }\n    }\n\n    /**\n     * @param query\n     * @private\n     * prepare set data to push to backend server\n     */\n    private buildQuery(query: string): KonversoQuery {\n        // @ts-ignore\n        const custom: any = this.customData.getValue();\n        return {\n            ...custom,\n            ...this.user,\n            query: query.replace(/\\s+/g, ' ').trim(),\n            isSending: true\n        };\n    }\n\n    /**\n     * @private\n     * Generate Random uniq Id for Konverso Instance\n     */\n    private guid() {\n        let random = () => {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        };\n        return random() + random() + '-' + random() + '-' + random() + '-' + random() + '-' + random() + random() + random();\n    }\n}\n","/***********************************************************\n **  @project ngx-konverso                              **\n **  @file BotMessageSample                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 02/04/2021                                         **\n ***********************************************************/\nimport {OpenChatBotResponse} from '../interface/KonversoInterface';\n\n\nexport const BotMessageSample : OpenChatBotResponse = {\n    query: null,\n    userId: null,\n    timestamp: 1617369777.976196,\n    text: null,\n    infoURL: '',\n    context: [],\n    suggestions: []\n};\n","/***********************************************************\n **  @project ngx-konverso                              **\n **  @file DotLoader                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 07/04/2021                                         **\n ***********************************************************/\n\n\nexport const DotLoaderTemplate = (color: string) => `<div class=\"loading-dots\">\n<div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  </div>`;\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {KonversoService} from './konverso.service';\nimport {ColorSet, DefaultAssets, KonversoAnswer, OpenChatBotResponse, UserInput} from '../interface/KonversoInterface';\nimport {BotMessageSample} from '../Sample/BotMessageSample';\nimport {DotLoaderTemplate} from '../Sample/DotLoader';\n\n// @ts-ignore\n@Component({\n    selector: 'ngx-konverso',\n    templateUrl: 'konverso.component.html',\n    styleUrls: ['../../assets/main.scss']\n})\nexport class KonversoComponent implements OnInit {\n    public _ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() sended: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Input() showInput = true;\n    public query: string;\n    public isMobile: boolean;\n    public assets: DefaultAssets;\n    public firstVisit: boolean;\n    public firstUsageStory: string[];\n    public AssistantMode = false;\n    public colorSet: ColorSet;\n    public History: (UserInput | OpenChatBotResponse)[];\n    public disableUserInput = false;\n    public LastUserInput: UserInput;\n    public LastBotAnswer: OpenChatBotResponse;\n    public PlaceHolder: string[];\n    public NumberPlaceHolder : string[];\n    public Welcome: string;\n\n    constructor(private service: KonversoService) {\n        if (service._auth) {\n            this.service.authentication.subscribe(() => {\n                this.ngOnInit();\n            })\n        }\n        this.service.emulationTrigger.subscribe((response: any) => {\n            console.log(response);\n            if (response) {\n                if (!this.LastUserInput) {\n                    this.LastUserInput = {\n                        message: '',\n                        date: '',\n                        error: null\n                    }\n                }\n                this.LastUserInput.message += ' ' + response.input;\n                this.LastUserInput.date = new Date().toISOString();\n                this.triggerKbotResponse(response);\n            }\n        })\n    }\n\n    private triggerKbotResponse(response: any): void {\n        if (response && response.response) {\n            if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\n                response.response.medias[0].required_actions.length) {\n                this.disableUserInput = true;\n            } else {\n                this.disableUserInput = false;\n            }\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        }\n    }\n\n    ngOnInit() {\n        console.log('user agent', navigator.userAgent, navigator.userAgent.match(/iPhone|iPad|iPod/i))\n        this.isMobile = this._isMobile();\n        this.assets = this.service.assets;\n        this.firstVisit = this.service.firstVisit;\n        this.firstUsageStory = this.service.firstUsageStory;\n        this.AssistantMode = this.service.AssistantMode;\n        this.PlaceHolder = this.service.PlaceHolder;\n        this.NumberPlaceHolder = this.service.NumberPlaceHolder;\n        this.Welcome = this.service.Welcome;\n        this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\n        this.History = [];\n        if (this.service.ColorSet) {\n            this.colorSet = this.service.ColorSet;\n        }\n        this._ready.subscribe((ready: boolean) => {\n            if (ready) {\n                this.firstVisit = false;\n                this.service.firstVisit = false;\n                this.ready.emit(ready);\n            }\n        });\n        if (this.Welcome) {\n            const customWelcome: OpenChatBotResponse = BotMessageSample;\n            customWelcome.text = this.Welcome;\n            this.LastBotAnswer = customWelcome;\n            this.History.push(customWelcome);\n        }\n    }\n\n    async send($event: UserInput) {\n        if ($event.message === 'exit') {\n            this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\n            return false;\n        }\n        this.sended.emit(true);\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\n        if (parseInt($event.message) == NaN) {\n            this.History.push($event);\n        }\n\n        console.log(parseInt($event.message));\n        if (this.AssistantMode) {\n            if (this.LastUserInput) {\n                if (parseInt($event.message) == NaN) {\n                    this.LastUserInput.message += ' ' + $event.message;\n                    this.LastUserInput.date = $event.date;\n                }\n            } else {\n                this.LastUserInput = $event;\n            }\n        } else {\n            this.LastUserInput = $event;\n        }\n\n        const index: number = this.History.length - 1;\n        const response: KonversoAnswer = await this.service.send($event.message).catch((err: string) => {\n            console.log('We got an error ', err);\n            // @ts-ignore\n            this.History[index].error = true;\n        });\n        this.triggerKbotResponse(response);\n    }\n\n    async sendBotCommand($event: string, push: boolean = true) {\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\n        if ($event === 'yes_response' || $event === 'no_response' || $event == 'exit') {\n            this.LastUserInput = null;\n        }\n        const response: KonversoAnswer = await this.service.send($event).catch((err: string) => {\n            console.log('We got an error ', err);\n        });\n        if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\n            response.response.medias[0].required_actions.length) {\n            this.disableUserInput = true;\n        } else {\n            this.disableUserInput = false;\n        }\n        if (response && response.response && push) {\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        } else if (response && response.response && !push) {\n            this.LastUserInput = null;\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        } else {\n            this.LastUserInput = null;\n        }\n    }\n\n    private _isMobile(): boolean {\n\n        const isMobile = {\n            Android: (): boolean => {\n                return !!navigator.userAgent.match(/Android/i);\n            },\n            BlackBerry: (): boolean => {\n                return !!navigator.userAgent.match(/BlackBerry/i);\n            },\n            iOS: (): boolean => {\n                return !!navigator.userAgent.match(/iPhone|iPad|iPod/i);\n            },\n            Opera: (): boolean => {\n                return !!navigator.userAgent.match(/Opera Mini/i);\n            },\n            Windows: (): boolean => {\n                return !!navigator.userAgent.match(/IEMobile/i) || !!navigator.userAgent.match(/WPDesktop/i);\n            },\n            any: (): boolean => {\n                return !!(isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n            }\n        };\n        return isMobile.any();\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  private lang = {\n      'fr': {\n          'GO': `C'est parti`,\n          'SEND': 'Envoyer',\n          'SELECT': 'Vous devez sélectionner une réponse',\n      },\n      'en': {\n          'GO': `Let's go`,\n          'SEND': 'Send',\n          'SELECT': 'You must select an answer',\n      }\n  }\n\n  constructor() { }\n\n  public translate(l, word) {\n    return this.lang[l][word];\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {DefaultAssets, OpenChatBotResponse, UserInput} from '../../interface/KonversoInterface';\nimport {KonversoService} from '../konverso.service';\nimport {TranslateService} from '../translate.service';\n//import * as run from 'projects/konverso/assets/animatedback.js';\n//import {KawaseBlurFilter} from \"../../filters/kawase-blur/src/KawaseBlurFilter\";\ndeclare var PIXI: any;\nconst defaultInputType = 'text';\nconst defaultInputLimit = 300;\n\n@Component({\n    selector: 'bot-full-screen',\n    templateUrl: './desktop-full-screen.component.html',\n    styleUrls: ['./desktop-full-screen.component.css']\n})\nexport class DesktopFullScreenComponent implements OnChanges, OnInit {\n    @Input() AssistantMode: boolean = false;\n    @Input() assets: DefaultAssets;\n    @Input() firstVisit: boolean = false;\n    @Input() firstUsageStory: string[];\n    @Input() displayData: (UserInput | OpenChatBotResponse)[];\n    @Input() disableUserInput: boolean;\n    @Input() LastUserInput: UserInput;\n    @Input() LastBotAnswer: OpenChatBotResponse;\n    @Input() PlaceHolder: string[];\n    @Input() IsMobile: boolean = false;\n    @Input() showInput: boolean;\n    @Input() NumberPlaceHolder: string[];\n\n    @Output() readySend: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n    @Output() send: EventEmitter<UserInput> = new EventEmitter<UserInput>(null);\n    @Output() sendBotCommand: EventEmitter<string> = new EventEmitter<string>(null);\n    @Output() sendEvent: EventEmitter<string> = new EventEmitter<string>(null);\n    public userInput: string;\n    public currentPlaceHolder: string = '';\n    public sendBtn = '';\n    public select = '';\n    public changed = false;\n    public botListening = false;\n    public showWrapper = false;\n    public showText = false;\n    public inputType: string = defaultInputType;\n    public inputLimit: number = defaultInputLimit;\n    private newMessage = false;\n    private messageCurrent = '';\n    private msgArray = [];\n    private botListeningTimer = 0;\n    private anim_done = false;\n    private reloaded = false;\n    private timer;\n\n    constructor(translate: TranslateService, private service: KonversoService) {\n        service.lang.subscribe((r) => {\n            if (service.locale) {\n                this.sendBtn = translate.translate(service.locale, 'SEND');\n                this.select = translate.translate(service.locale, 'SELECT');\n            }\n        });\n    }\n\n    ngOnChanges() {\n        let t = setInterval(() => {\n            if (document.querySelectorAll('.bot-answer')) {\n                let elems = document.querySelectorAll('.bot-answer');\n                if (elems.length > 0) {\n                    let index = 0, length = elems.length;\n                    let rep = true;\n                    for (; index < length; index++) {\n                        let temp = elems[index] as HTMLElement;\n                        if (temp.style.opacity == '0') {\n                            temp.style.opacity = '1';\n                        }\n                    }\n                    this.anim_done = rep;\n                    if (this.anim_done) {\n                        clearInterval(t);\n                    }\n                }\n            }\n        }, 100);\n\n        this.changed = false;\n\n        if (document.getElementById('text') && !this.LastBotAnswer?.text.includes('loading-dots')) {\n            document.getElementById('text').innerHTML = '';\n        }\n\n        console.log('-------> enter', this.LastBotAnswer?.text.includes('<number>') && this.LastBotAnswer?.text.includes('</number>'));\n        if (this.LastBotAnswer?.text.includes('<number>') && this.LastBotAnswer?.text.includes('</number>')) {\n            this.inputType = 'number';\n            this.inputLimit = 999;\n            this.currentPlaceHolder = this.NumberPlaceHolder[Math.floor(Math.random() * this.NumberPlaceHolder.length)];\n        } else {\n            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n            this.inputType = defaultInputType;\n            this.inputLimit = defaultInputLimit;\n        }\n\n        console.log('TYPE %s MAX %d', this.inputType,  this.inputLimit, this.currentPlaceHolder)\n        //console.log(this.LastBotAnswer);\n\n        if (!this.anim_done) {\n            let t2 = setInterval(() => {\n                if (this.LastBotAnswer && !this.LastBotAnswer?.text.includes('loading-dots') && this.anim_done) {\n                    clearInterval(t2);\n                    const string = this.LastBotAnswer?.text\n                        .split('<br/>').join(` `)\n                        .split('&eacute;').join('é')\n                        .split('&egrave;').join('è')\n                        .replace(/<[^>]*>?/gm, '')\n                        .split('&nbsp;').join('');\n\n                    this.msgArray = string.split('');\n                    if (this.messageCurrent !== string) {\n                        this.newMessage = true;\n                        this.messageCurrent = string;\n                        this.launchLoop();\n                    }\n                    //this.looper(array, timer);\n                }\n            }, 100);\n        } else {\n            const string = this.LastBotAnswer?.text\n                .split('<br/>').join(` `)\n                .split('&eacute;').join('é')\n                .split('&egrave;').join('è')\n                .replace(/<[^>]*>?/gm, '')\n                .split('&nbsp;').join('');\n\n            this.msgArray = string.split('');\n            if (this.messageCurrent !== string && string !== '') {\n                this.newMessage = true;\n                this.messageCurrent = string;\n                this.launchLoop();\n            }\n        }\n\n        setTimeout(() => {\n            this.changed = true;\n        }, 100);\n    }\n\n    launchLoop() {\n        this.timer = setInterval(() => {\n            if (this.msgArray.length == 0) {\n                clearInterval(this.timer);\n            }\n            if (this.newMessage) {\n                if (document.getElementById('text')) {\n                    document.getElementById('text').innerHTML = '';\n                }\n\n                this.newMessage = false;\n                //this.msgArray = this.messageCurrent.split(\"\");\n                clearInterval(this.timer);\n                this.launchLoop();\n            }\n            this.looper();\n        }, 60);\n    }\n\n    looper() {\n        if (this.msgArray.length > 0 && !this.reloaded) {\n            if (document.getElementById('text')) {\n                document.getElementById('text').innerHTML += this.msgArray.shift();\n            }\n        }/*else {\n        clearTimeout(timer);\n      }*/\n        /*timer = setTimeout(() => {\n          this.looper(array, timer);\n        }, 30);*/\n    }\n\n    ngOnInit(): void {\n        this.inputType = defaultInputType;\n        this.inputLimit = defaultInputLimit;\n        if (this.PlaceHolder) {\n            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n            setInterval(() => {\n                this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n            }, 3000);\n        }\n\n        setTimeout(() => {\n            this.showWrapper = true;\n        }, 2000);\n\n        setTimeout(() => {\n            this.showText = true;\n        }, 2500);\n\n        let t = setInterval(() => {\n            if (document.querySelectorAll('.bot-answer')) {\n                let elems = document.querySelectorAll('.bot-answer');\n                if (elems.length > 0) {\n                    let index = 0, length = elems.length;\n                    let rep = true;\n                    for (; index < length; index++) {\n                        let temp = elems[index] as HTMLElement;\n                        if (temp.style.opacity == '0') {\n                            rep = false;\n                        }\n                    }\n                    this.anim_done = rep;\n                    if (this.anim_done) {\n                        clearInterval(t);\n                    }\n                }\n            }\n        }, 100);\n\n        //run.run();\n\n        setInterval(() => {\n            if (this.botListeningTimer > 0) {\n                this.botListeningTimer -= 1;\n\n                if (this.botListeningTimer > 0) {\n                    document.getElementById('bot').className = 'a-cue-voice speaking';\n                    document.getElementById('bot-icon').className = 'a-cue-icon speakingicon';\n                } else {\n                    document.getElementById('bot').className = 'a-cue-voice';\n                    document.getElementById('bot-icon').className = 'a-cue-icon';\n                }\n\n                this.botListening = this.botListeningTimer > 0;\n            }\n        }, 500);\n    }\n\n    userWriting(key: any) {\n        if (key.code === 'Enter') {\n            this.botListening = false;\n            this.botListeningTimer = 0;\n        } else if (key.code === 'Backspace') {\n\n        } else {\n            this.botListening = true;\n            if (this.botListeningTimer == 0) {\n                this.botListeningTimer += 2;\n            } else if (this.botListeningTimer < 5) {\n                this.botListeningTimer += 1;\n            }\n        }\n    }\n\n    public emit($event) {\n        this.firstVisit = false;\n        this.readySend.emit(true);\n    }\n\n    public _send() {\n        if (this.LastBotAnswer?.endOfTopic && this.LastUserInput) {\n            this.LastUserInput.message = '';\n        }\n\n        this.botListening = false;\n        const userData: UserInput = {\n            message: this.userInput,\n            date: new Date().toLocaleTimeString(navigator.language, {\n                hour: '2-digit',\n                minute: '2-digit'\n            })\n        };\n        this.send.emit(userData);\n        this.userInput = null;\n    }\n\n    async scroll(scrollHeight: number) {\n        return new Promise<number>((resolve) => {\n            setTimeout(() => {\n                resolve(0);\n            }, 300);\n        });\n\n    }\n\n    byPassUserInput(botdata: string, i?: number) {\n        /*const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.show-btn');\n        for (let btn of Array.from(buttons)) {\n          btn.classList.add('hidden-btn');\n        }*/\n        const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');\n        for (let btn of Array.from(buttons)) {\n            btn.classList.add('hidden-btn');\n        }\n        this.sendBotCommand.emit(botdata);\n        setTimeout(() => {\n            const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');\n            for (let btn of Array.from(buttons)) {\n                btn.classList.remove('hidden-btn');\n            }\n        }, 1000);\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DefaultAssets} from '../../interface/KonversoInterface';\nimport { KonversoService } from '../konverso.service';\nimport { TranslateService } from '../translate.service';\n\n@Component({\n  selector: 'bot-first-visit',\n  templateUrl: './first-visit.component.html',\n  styleUrls: ['./first-visit.component.scss']\n})\nexport class FirstVisitComponent implements OnInit {\n  @Input() firstUsageStory: string[];\n  @Input() assets: DefaultAssets;\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n  public position = 0;\n  public current = '';\n  public go = '';\n\n  constructor(translate: TranslateService, private service: KonversoService) {\n    service.lang.subscribe((r) => {\n      if (service.locale) {\n        this.go = translate.translate(service.locale, 'GO');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.current = this.firstUsageStory[this.position];\n    const clear = setInterval(() => {\n      if (this.position < (this.firstUsageStory.length - 1)) {\n        this.current = this.firstUsageStory[++this.position];\n      } else {\n        clearInterval(clear);\n      }\n    }, 5000);\n  }\n\n  goTo(pos: number) {\n    this.position = pos;\n    this.current = this.firstUsageStory[this.position];\n  }\n\n  start(): void {\n    //console.log('OOOKKKK')\n    this.ready.emit(true);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n  public transform(value: any): any {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {KonversoComponent} from './konverso.component';\nimport {KonversoInterface} from '../interface/KonversoInterface';\nimport {KonversoService} from './konverso.service';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DesktopFullScreenComponent} from './desktop-full-screen/desktop-full-screen.component';\nimport {CommonModule} from '@angular/common';\nimport { FirstVisitComponent } from './first-visit/first-visit.component';\nimport { SafeHtmlPipe } from './pipe/safe-html.pipe';\n\n// @ts-ignore\n@NgModule({\n  declarations: [KonversoComponent, DesktopFullScreenComponent, FirstVisitComponent, SafeHtmlPipe],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  providers : [KonversoService],\n  exports: [KonversoComponent]\n})\nexport class KonversoModule {\n  constructor(@Optional() @SkipSelf() parentModule?: KonversoModule) {\n    if (parentModule) {\n      throw new Error(\n        'KonversoModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: KonversoInterface): ModuleWithProviders<KonversoModule> {\n    return {\n      ngModule: KonversoModule,\n      providers: [\n        {provide: '__NgxKonverso__', useValue: config},\n        KonversoService\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DesktopFullScreenComponent as ɵa} from './lib/desktop-full-screen/desktop-full-screen.component';\nexport {FirstVisitComponent as ɵc} from './lib/first-visit/first-visit.component';\nexport {SafeHtmlPipe as ɵd} from './lib/pipe/safe-html.pipe';\nexport {TranslateService as ɵb} from './lib/translate.service';"],"names":["mustache.render"],"mappings":"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"}