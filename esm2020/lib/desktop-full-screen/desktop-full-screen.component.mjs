import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';
import { FadeSlideInOut, FadeSlideInOutKonversoOpacityOut, FadeSlideInOutKonversoTranslateOut } from 'ngx-nowbrains-animations';
import * as i0 from "@angular/core";
import * as i1 from "../translate.service";
import * as i2 from "../konverso.service";
import * as i3 from "ngx-nowbrains-animations";
import * as i4 from "../first-visit/first-visit.component";
import * as i5 from "../custom-checkbox-calendar/custom-checkbox-calendar.component";
import * as i6 from "nowboard-icon";
import * as i7 from "@angular/common";
import * as i8 from "@angular/forms";
import * as i9 from "../pipe/safe-html.pipe";
const defaultInputType = 'text';
const defaultInputLimit = 300;
const ANIMATION_TTX = 750;
const ANIMATION_TTX_ADD = 250;
const ANIMATION_SLIDE_VALUE = -50;
const ANIMATION_SLIDE_VALUE_ADD = -25;
export class DesktopFullScreenComponent {
    constructor(translate, service, animations, config) {
        this.translate = translate;
        this.service = service;
        this.animations = animations;
        this.AssistantMode = false;
        this.firstVisit = false;
        this.IsMobile = false;
        this.afterProcess = false;
        this.fileNb = 0;
        this.readySend = new EventEmitter(false);
        this.send = new EventEmitter(null);
        this.sendBotCommand = new EventEmitter(null);
        this.sendEvent = new EventEmitter(null);
        this.sendCalendar = new EventEmitter(null);
        this.currentPlaceHolder = '';
        this.sendBtn = '';
        this.sendBtnMsg = '';
        this.select = '';
        this.changed = false;
        this.botListening = false;
        this.showWrapper = true;
        this.showText = true;
        this.inputType = defaultInputType;
        this.inputLimit = defaultInputLimit;
        this.newMessage = false;
        this.messageCurrent = '';
        this.msgArray = [];
        this.botListeningTimer = 0;
        this.anim_done = false;
        this.reloaded = false;
        this.btnScreen = '';
        this.nbAttachments = 0;
        this.days = [];
        this.calendarAvailability = {};
        this.calendarTemplate = {
            morning: { all: true, monday: true, tuesday: true, wednesday: true, thursday: true, friday: true },
            afternoon: { all: true, monday: true, tuesday: true, wednesday: true, thursday: true, friday: true }
        };
        this.calendarKeyOverride = {
            morning: 'MORNING_ALL',
            afternoon: 'AFTERNOON_ALL',
            monday: 'MONDAY',
            tuesday: 'TUESDAY',
            wednesday: 'WEDNESDAY',
            thursday: 'THURSDAY',
            friday: 'FRIDAY'
        };
        this.animationTTX = ANIMATION_TTX;
        this.animationTtxAdd = ANIMATION_TTX_ADD;
        this.animationSlideValue = ANIMATION_SLIDE_VALUE;
        this.animationSlideValueAdd = ANIMATION_SLIDE_VALUE_ADD;
        service.lang.subscribe((r) => {
            if (service.locale) {
                this.sendBtn = translate.translate(service.locale, 'SEND');
                this.sendBtnMsg = translate.translate(service.locale, 'SEND_MESSAGE');
                this.select = translate.translate(service.locale, 'SELECT');
                this.btnScreen = translate.translate(service.locale, 'SCREENSHOT');
                this.days = [
                    'MONDAY',
                    'TUESDAY',
                    'WEDNESDAY',
                    'THURSDAY',
                    'FRIDAY',
                    'SATURDAY',
                    'SUNDAY',
                    'MONDAY',
                ];
            }
        });
        this.config = config;
    }
    changeNumber(value) {
        if ((+this.userInput + value) > 0) {
            this.userInput = (+this.userInput + value).toString();
        }
    }
    ngOnChanges() {
        console.log(this.LastUserInput);
        if (this.afterProcess) {
            this.LastUserInput = null;
            this.LastBotAnswer.text = this.config.AfterProcessScenario.BotMessage[this.service.locale];
            if (this.config.AfterProcessScenario.FormElements[0][0].label == 'Jour 1') {
                let day1 = this.days[new Date().getDay() - 1];
                let day2 = this.days[new Date().getDay()];
                let day3 = this.days[new Date().getDay() + 1];
                this.config.AfterProcessScenario.FormElements[0][0].label = day1;
                this.config.AfterProcessScenario.FormElements[1][0].label = day2;
                this.config.AfterProcessScenario.FormElements[2][0].label = day3;
            }
        }
        /* TODO remove it */
        /*         let t = setInterval(() => {
                    if (document.querySelectorAll('.bot-answer')) {
                        let elems = document.querySelectorAll('.bot-answer');
                        if (elems.length > 0) {
                            let index = 0, length = elems.length;
                            let rep = true;
                            for (; index < length; index++) {
                                let temp = elems[index] as HTMLElement;
                                if (temp.style.opacity == '0') {
                                    temp.style.opacity = '1';
                                }
                            }
                            this.anim_done = rep;
                            if (this.anim_done) {
                                clearInterval(t);
                            }
                        }
                    }
                }, 100); */
        this.changed = false;
        if (document.getElementById('text') && !this.LastBotAnswer?.text.includes('loading-dots')) {
            document.getElementById('text').innerHTML = '';
        }
        console.log('-------> enter', this.LastBotAnswer?.text.includes('<number>') && this.LastBotAnswer?.text.includes('</number>'));
        if (this.LastBotAnswer?.text.includes('<number>') && this.LastBotAnswer?.text.includes('</number>')) {
            this.userInput = '1';
            this.inputType = 'number';
            this.inputLimit = 999;
            this.currentPlaceHolder = this.NumberPlaceHolder[Math.floor(Math.random() * this.NumberPlaceHolder.length)];
        }
        else {
            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];
            this.inputType = defaultInputType;
            this.inputLimit = defaultInputLimit;
        }
        console.log('TYPE %s MAX %d', this.inputType, this.inputLimit, this.currentPlaceHolder);
        //console.log(this.LastBotAnswer);
        if (!this.anim_done) {
            let t2 = setInterval(() => {
                if (this.LastBotAnswer && !this.LastBotAnswer?.text.includes('loading-dots') && this.anim_done) {
                    clearInterval(t2);
                    const string = this.LastBotAnswer?.text
                        .split('<br/>').join(` `)
                        .split('&eacute;').join('é')
                        .split('&egrave;').join('è')
                        .replace(/<[^>]*>?/gm, '')
                        .split('&nbsp;').join('');
                    this.msgArray = string.split('');
                    if (this.messageCurrent !== string) {
                        this.newMessage = true;
                        this.messageCurrent = string;
                        this.launchLoop();
                    }
                    //this.looper(array, timer);
                }
            }, 100);
        }
        else {
            const string = this.LastBotAnswer?.text
                .split('<br/>').join(` `)
                .split('&eacute;').join('é')
                .split('&egrave;').join('è')
                .replace(/<[^>]*>?/gm, '')
                .split('&nbsp;').join('');
            this.msgArray = string.split('');
            if (this.messageCurrent !== string && string !== '') {
                this.newMessage = true;
                this.messageCurrent = string;
                this.launchLoop();
            }
        }
        setTimeout(() => {
            this.changed = true;
        }, 100);
    }
    bindCalendar($event) {
        //console.log('bindCalendar $event', $event)
        delete $event.all;
        this.calendarAvailability = $event;
    }
    getCalendar() {
        this.sendCalendar.emit(this.calendarAvailability);
    }
    launchLoop() {
        this.timer = setInterval(() => {
            if (this.msgArray.length == 0) {
                clearInterval(this.timer);
            }
            if (this.newMessage) {
                if (document.getElementById('text')) {
                    document.getElementById('text').innerHTML = '';
                }
                this.newMessage = false;
                //this.msgArray = this.messageCurrent.split("");
                clearInterval(this.timer);
                this.launchLoop();
            }
            this.looper();
        }, 60);
    }
    looper() {
        if (this.msgArray.length > 0 && !this.reloaded) {
            if (document.getElementById('text')) {
                document.getElementById('text').innerHTML += this.msgArray.shift();
            }
        } /*else {
        clearTimeout(timer);
      }*/
        /*timer = setTimeout(() => {
          this.looper(array, timer);
        }, 30);*/
    }
    ngOnInit() {
        this.inputType = defaultInputType;
        this.inputLimit = defaultInputLimit;
        if (this.PlaceHolder) {
            this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];
            setInterval(() => {
                this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];
            }, 3000);
        }
        /*setTimeout(() => {
            this.showWrapper = true;
        }, 2000);

        setTimeout(() => {
            this.showText = true;
        }, 2500);*/
        /* TODO remove it */
        /*         let t = setInterval(() => {
                    if (document.querySelectorAll('.bot-answer')) {
                        let elems = document.querySelectorAll('.bot-answer');
                        if (elems.length > 0) {
                            let index = 0, length = elems.length;
                            let rep = true;
                            for (; index < length; index++) {
                                let temp = elems[index] as HTMLElement;
                                if (temp.style.opacity == '0') {
                                    rep = false;
                                }
                            }
                            this.anim_done = rep;
                            if (this.anim_done) {
                                clearInterval(t);
                            }
                        }
                    }
                }, 100); */
        //run.run();
        /*setInterval(() => {
            if (this.botListeningTimer > 0) {
                this.botListeningTimer -= 1;

                if (this.botListeningTimer > 0) {
                    document.getElementById('bot').className = 'a-cue-voice speaking';
                    document.getElementById('bot-icon').className = 'a-cue-icon speakingicon';
                } else {
                    document.getElementById('bot').className = 'a-cue-voice';
                    document.getElementById('bot-icon').className = 'a-cue-icon';
                }

                this.botListening = this.botListeningTimer > 0;
            }
        }, 500);*/
    }
    userWriting(key) {
        if (key.code === 'Enter') {
            this.botListening = false;
            this.botListeningTimer = 0;
        }
        else if (key.code === 'Backspace') {
        }
        else {
            this.botListening = true;
            if (this.botListeningTimer == 0) {
                this.botListeningTimer += 2;
            }
            else if (this.botListeningTimer < 5) {
                this.botListeningTimer += 1;
            }
        }
    }
    emit($event) {
        this.firstVisit = false;
        this.readySend.emit(true);
    }
    _send() {
        if (this.LastBotAnswer?.endOfTopic && this.LastUserInput) {
            this.LastUserInput.message = '';
        }
        this.botListening = false;
        const userData = {
            message: this.userInput,
            date: new Date().toLocaleTimeString(navigator.language, {
                hour: '2-digit',
                minute: '2-digit'
            })
        };
        this.send.emit(userData);
        this.userInput = null;
    }
    async scroll(scrollHeight) {
        return new Promise((resolve) => {
            setTimeout(() => {
                resolve(0);
            }, 300);
        });
    }
    byPassUserInput(botdata, i) {
        /* TODO remove it */
        /*const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.show-btn');
        for (let btn of Array.from(buttons)) {
          btn.classList.add('hidden-btn');
        }*/
        /* const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');
        for (let btn of Array.from(buttons)) {
            btn.classList.add('hidden-btn');
        } */
        this.sendBotCommand.emit(botdata);
        /* TODO remove it */
        /* setTimeout(() => {
            const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');
            for (let btn of Array.from(buttons)) {
                btn.classList.remove('hidden-btn');
            }
        }, 1000); */
    }
}
DesktopFullScreenComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: DesktopFullScreenComponent, deps: [{ token: i1.TranslateService }, { token: i2.KonversoService }, { token: i3.AnimationsService }, { token: '__NgxKonverso__' }], target: i0.ɵɵFactoryTarget.Component });
DesktopFullScreenComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.0", type: DesktopFullScreenComponent, selector: "bot-full-screen", inputs: { AssistantMode: "AssistantMode", assets: "assets", firstVisit: "firstVisit", firstUsageStory: "firstUsageStory", displayData: "displayData", disableUserInput: "disableUserInput", LastUserInput: "LastUserInput", LastBotAnswer: "LastBotAnswer", PlaceHolder: "PlaceHolder", IsMobile: "IsMobile", showInput: "showInput", NumberPlaceHolder: "NumberPlaceHolder", afterProcess: "afterProcess", fileNb: "fileNb" }, outputs: { readySend: "readySend", send: "send", sendBotCommand: "sendBotCommand", sendEvent: "sendEvent", sendCalendar: "sendCalendar" }, usesOnChanges: true, ngImport: i0, template: "<!--<div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"-->\r\n\r\n  <!--<canvas class=\"orb-canvas\"></canvas>\r\n  <div class=\"overlay\">\r\n    <div class=\"overlay__inner\">\r\n    </div>\r\n  </div>-->\r\n  <div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"\r\n     xmlns=\"http://www.w3.org/1999/html\">\r\n  <div class=\"bot-view\">\r\n    <ng-container *ngIf=\"firstVisit && firstUsageStory\">\r\n      <bot-first-visit [firstUsageStory]=\"firstUsageStory\" [assets]=\"assets\"\r\n                       (ready)=\"emit($event)\"></bot-first-visit>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!firstVisit || !firstUsageStory\">\r\n      <button (click)=\"byPassUserInput('exit', 0)\" id=\"exit-btn\" style=\"display: none;\"></button>\r\n\r\n      <div class=\"bot-assistant-wrapper\" *ngIf=\"AssistantMode\">\r\n        <!-- TODO do we need id, remove it? -->\r\n        <!--<div *ngIf=\"!botListening\" class=\"bot-logo\" id=\"botlogo\">\r\n          <img [src]=\"assets.FullSizeLogo\">\r\n        </div>-->\r\n        <!--<div [ngStyle]=\"{'height': '40%'}\" class=\"bot-logo bot-listening\">\r\n          <div [ngStyle]=\"{'transform': 'translateY(-10vh)'}\" class=\"m-carl-notification\">\r\n            <div class=\"m-carl-notification-cue m-cue\">\r\n              <div *ngIf=\"botListening\" class=\"a-cue-voice\" id=\"bot\">\r\n                <div class=\"a-cue-voice-el voice1\"></div>\r\n                <div class=\"a-cue-voice-el voice2\"></div>\r\n                <div class=\"a-cue-voice-el voice3\"></div>\r\n                <div class=\"a-cue-voice-el voice4\"></div>\r\n                <div class=\"a-cue-voice-el\"></div>\r\n              </div>\r\n              <div class=\"a-cue-icon\" id=\"bot-icon\"></div>\r\n            </div>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" [ngStyle]=\"{'height': '40%'}\" class=\"bot\">\r\n          <div class=\"circle1\"></div>\r\n          <div class=\"circle2\"></div>\r\n          <div class=\"circle3\"></div>\r\n        </div>\r\n        <div  class=\"bot-discussion-wrapper\" style=\"min-height: 60%; max-height: 60%; height: 60%; /*max-height: 120px;*/\">\r\n\r\n          <ng-container *ngIf=\"LastUserInput && !afterProcess\">\r\n            <div [@fadeSlideInOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\"  class=\"user-input\" *ngIf=\"LastUserInput && LastUserInput?.message != ''\">\r\n              <div class=\"data\" [style]=\"{\r\n                     color : assets?.ColorSet?.Secondary\r\n                    }\" [innerHTML]=\"LastUserInput.message\">\r\n              </div>\r\n              <span class=\"time\">{{LastUserInput.date}}</span>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <!-- BOT ANSWER -->\r\n          <ng-container *ngIf=\"LastBotAnswer\">\r\n            <div class=\"position-relative bot-answer\">\r\n\r\n              <div class=\"d-flex flex-column w-100 position-relative bot-answer__text\">\r\n              <!-- BOT ANSWER TEXT -->\r\n              <ng-container *ngIf=\"LastBotAnswer.text\">\r\n\r\n                <!--<span *ngIf=\"!LastBotAnswer.text.includes('loading-dots')\" id=\"text\"></span><br>\r\n                <span *ngIf=\"changed && LastBotAnswer.text.includes('loading-dots')\" class=\"fade\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span><br>\r\n                -->\r\n\r\n                <ng-container *ngIf=\"!LastBotAnswer.text.includes('loading-dots') && changed && showText\">\r\n                  <span [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\" class=\"w-100 justify-content-center\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!afterProcess\">\r\n                  <span id=\"loading-creation\"></span>\r\n                </ng-container>\r\n              </ng-container>\r\n              </div>\r\n\r\n              <ng-container *ngIf=\"LastBotAnswer.medias && LastBotAnswer.medias.length\r\n                && LastBotAnswer.medias[0].required_actions\r\n                && LastBotAnswer.medias[0].required_actions.length > 0\r\n                && !LastBotAnswer.text.includes('loading-dots')\">\r\n                <div class=\"mt35 d-flex justify-content-center w-100 position-relative bot-answer__buttons\">\r\n                  <ng-container *ngFor=\"let suggest of LastBotAnswer.medias[0].required_actions; let i = index\">\r\n                    <ng-container *ngIf=\"suggest.format === 'button'\">\r\n                        <button\r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"\r\n                          *ngIf=\"suggest.value?.title == 'Terminer' && changed || suggest.value?.title == 'Quit' && changed\" [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"  \r\n                          class=\"bot-button bot-button-left show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                        </button>\r\n                        <button \r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"\r\n                          *ngIf=\"suggest.value?.title == 'Nouvelle Demande' && changed || suggest.value?.title == 'New Request' && changed\" [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"  \r\n                          class=\"bot-button bot-button-right show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                        </button>\r\n                        <button\r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"  \r\n                          *ngIf=\"suggest.value?.title && suggest.value?.title != 'Terminer' && suggest.value?.title != 'Quit' && suggest.value?.title != 'Nouvelle Demande' && suggest.value?.title != 'New Request' && changed\"\r\n                            [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"   \r\n                          class=\"bot-button bot-button-grey show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"                    \r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                      </button>\r\n                    </ng-container>                  \r\n                  </ng-container>\r\n                </div>\r\n                <ng-container *ngIf=\"disableUserInput\">\r\n                  <div class=\"position-relative bot-answer__disable-input\">\r\n                    <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\" class=\"bot-input-disable\">\r\n                      <i>{{ select }}</i>\r\n                    </div>     \r\n                  </div>\r\n                </ng-container>  \r\n              </ng-container>\r\n              <!-- BOT ANSWER BUTTONS -->\r\n\r\n              <!--<ng-container *ngIf=\"afterProcess && config.AfterProcessScenario.FormElements.length > 0\">\r\n                <div class=\"after-process-form\">\r\n                  <div class=\"after-process-subform\" *ngFor=\"let formElements of config.AfterProcessScenario.FormElements\">\r\n                    <ng-container *ngFor=\"let form of formElements\">\r\n                      <ng-container [ngSwitch]=\"form.type\">\r\n                        <div *ngSwitchCase=\"'checkbox'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\" class=\"bot-checkbox\">\r\n                          <input [checked]=\"form?.checked == true ? 'true': 'false'\" [id]=\"form?.id\" [name]=\"form?.id\" [type]='form?.type' value=\"false\">\r\n                          <label [for]=\"form?.id\" class=\"bot-checkbox-label\">\r\n                            {{ translate.translate(service.locale, form.label) }}\r\n                          </label>\r\n                        </div>\r\n\r\n                        <input [class]=\"form?.class\" [id]=\"form?.id\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\" *ngSwitchCase=\"'text'\" \r\n                        [pattern]=\"form?.pattern\" [placeholder]=\"form?.placeholder\" [type]=\"form?.type\" \r\n                        [value]=\"form?.value\">\r\n\r\n                        <div [class]=\"form?.class\" *ngSwitchCase=\"'div'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\">\r\n                          {{ translate.translate(service.locale, form?.content) }}\r\n                        </div>\r\n\r\n                        <textarea [class]=\"form?.class\" [id]=\"form?.id\" *ngSwitchCase=\"'textarea'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\"\r\n                        [placeholder]=\"translate.translate(service.locale, form?.placeholder)\"></textarea>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </ng-container>-->\r\n\r\n              <custom-checkbox-calendar\r\n                [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\"\r\n                *ngIf=\"afterProcess\"\r\n                [state]=\"afterProcess\"\r\n                (calendarChange)=\"bindCalendar($event)\"\r\n                [calendarTemplate]=\"calendarTemplate\"\r\n                [columnOverride]=\"calendarKeyOverride\">\r\n              </custom-checkbox-calendar>\r\n\r\n              <ng-container *ngIf=\"inputType === 'number'\">\r\n                <div [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" class=\"bot-input\">\r\n                                  <!--<input [type]=\"inputType\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" min=\"2\" [max]=\"inputLimit\"\r\n                       [placeholder]=\"currentPlaceHolder\">-->\r\n                  <div class=\"input-number-div\">\r\n                    <div class=\"input-number-div-arrow\">\r\n                      <button (click)=\"changeNumber(1)\" class=\"arrow-up\">\r\n                        <nb-icon [icon]=\"'up_2'\" [size]=\"1.5\"></nb-icon>\r\n                      </button>\r\n\r\n                      <button (click)=\"changeNumber(-1)\" class=\"arrow-down\">\r\n                        <nb-icon [icon]=\"'down_2'\" [size]=\"1.5\"></nb-icon>\r\n                      </button>\r\n                    </div>\r\n\r\n                    {{ userInput }}\r\n                  </div>\r\n\r\n                  <div class=\"bot-container-btn\">\r\n                    <button class=\"bot-button send-btn input-number-btn\" [style]=\"{\r\n                      backgroundColor : assets?.ColorSet?.Primary,\r\n                      color : assets?.ColorSet?.Secondary\r\n                  }\" (click)=\"_send()\" [disabled]=\"!userInput\">\r\n    \r\n                      <ng-container *ngIf=\"inputType === 'number'\">\r\n                        {{ sendBtn }}\r\n                      </ng-container>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <div class=\"position-relative bot-input-wrapper\">\r\n            <ng-container *ngIf=\"afterProcess && config.AfterProcessScenario.FormButtons.length > 0\">\r\n              <!--<button [class]=\"btn.class\" *ngFor=\"let btn of config.AfterProcessScenario.FormButtons\" [ngStyle]=\"{'display': btn?.display ? btn.display: 'block'}\">\r\n                {{ translate.translate(service.locale, btn.label) }}\r\n              </button>-->\r\n              <button (click)=\"getCalendar()\" class=\"primary rounded validate-after-btn\" style=\"display: inline-block;\">\r\n                {{ translate.translate(service.locale, 'VALIDATE_AVAILABILITY') }}\r\n              </button>\r\n\r\n              <button class=\"rounded secondary skip-after-btn\" style=\"display: inline-block;\">\r\n                {{ translate.translate(service.locale, 'SKIP') }}\r\n              </button>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"!disableUserInput && showInput\">\r\n              <div class=\"d-flex flex-column w-100 position-realtive bot-input\" id=\"bot-input-div\">\r\n                <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -25)\" class=\"w-100 h-100 d-flex flex-column position-absolute bot-input__controls\">\r\n                  <ng-container *ngIf=\"inputType === 'text'\">\r\n                    <textarea [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" [maxlength]=\"inputLimit\"\r\n                      [placeholder]=\"currentPlaceHolder\"></textarea>\r\n                  </ng-container>\r\n\r\n                  <div *ngIf=\"inputType !== 'number'\" class=\"bot-container-btn\">\r\n                    <button class=\"bot-button send-btn\" [style]=\"{\r\n                      backgroundColor : assets?.ColorSet?.Primary,\r\n                      color : assets?.ColorSet?.Secondary}\" \r\n                      (click)=\"_send()\" \r\n                      [disabled]=\"!userInput\">\r\n                  \r\n                      <ng-container *ngIf=\"inputType !== 'number'\">\r\n                        {{ sendBtnMsg }}\r\n                      </ng-container>\r\n    \r\n                      <!--<ng-container *ngIf=\"inputType === 'number'\">\r\n                        {{ sendBtn }}\r\n                      </ng-container>-->\r\n                    </button>\r\n    \r\n                    <button *ngIf=\"inputType !== 'number' && IsMobile\" class=\"bot-button-screen\">\r\n                      <nb-icon [icon]=\"'scan_11'\" [size]=\"1.5\"></nb-icon>\r\n                      {{ btnScreen }}\r\n                    </button>\r\n    \r\n                    <button *ngIf=\"inputType !== 'number'\" class=\"bot-button-attach\">\r\n                      {{ fileNb }}\r\n    \r\n                      <ng-container *ngIf=\"fileNb <= 1\">\r\n                        {{ translate.translate(service.locale, 'ATTACHMENT') }}\r\n                      </ng-container>\r\n    \r\n                      <ng-container *ngIf=\"fileNb > 1\">\r\n                        {{ translate.translate(service.locale, 'ATTACHMENTS') }}\r\n                      </ng-container>\r\n    \r\n                      <nb-icon [icon]=\"'attachment'\" [size]=\"1.5\"></nb-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>  \r\n            </ng-container>\r\n            \r\n            <!-- TODO remove it -->\r\n            <!-- <ng-container *ngIf=\"disableUserInput\">\r\n              <div class=\"bot-input-disable\">\r\n                <i>{{ select }}</i>\r\n               </div>   \r\n            </ng-container> -->\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"bot-chat-wrapper\" *ngIf=\"!AssistantMode\">\r\n        {{AssistantMode}}\r\n        <div class=\"bot-discussion-wrapper\" #scrollMe [scrollTop]=\"scrollMe.scrollTo(0, 9999999)\">\r\n          <div class=\"bot-chat\">\r\n            <ng-container *ngFor=\"let entry of displayData\">\r\n              <ng-container *ngIf=\"entry.date\">\r\n                <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" class=\"user-input\">\r\n                  <div class=\"data\" [style]=\"{\r\n                     backgroundColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Secondary\r\n                    }\" [innerHTML]=\"entry.message\">\r\n                  </div>\r\n                  <span class=\"time\">{{entry.date}}</span>\r\n                </div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"!entry.date\">\r\n                <div class=\"bot-answer\">\r\n                  <ng-container *ngIf=\"entry.text\">\r\n                    <span *ngIf=\"changed\" class=\"\" [innerHTML]=\"entry.text | safeHtml\"></span>\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"entry.medias && entry.medias.length\r\n                   && entry.medias[0].required_actions\r\n                   && entry.medias[0].required_actions.length\">\r\n                    <ng-container *ngFor=\"let suggest of entry.medias[0].required_actions\">\r\n                      <ng-container *ngIf=\"suggest.format === 'button'\">\r\n                        <button *ngIf=\"changed\" [style]=\"{\r\n                     borderColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Primary\r\n            }\" class=\"bot-button\" (click)=\"byPassUserInput(suggest?.value?.onClick)\"\r\n                                [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \"></button>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </ng-container>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"bot-input-wrapper\">\r\n          <div class=\"bot-input\" *ngIf=\"!disableUserInput && showInput\">\r\n            <input type=\"text\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" maxlength=\"200\"\r\n                   [placeholder]=\"currentPlaceHolder\">\r\n            <button *ngIf=\"changed\" class=\"bot-button\" [style]=\"{\r\n                     backgroundColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Secondary\r\n            }\" (click)=\"_send()\" [disabled]=\"!userInput\">{{ sendBtn }}\r\n            </button>\r\n          </div>\r\n          <div class=\"bot-input-disable\" *ngIf=\"disableUserInput\">\r\n            <i>{{ select }}</i>\r\n          </div>\r\n        </div>\r\n        <div class=\"bot-logo\">\r\n          <img [src]=\"assets.FullSizeLogo\">\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </div>\r\n</div>\r\n", styles: ["@keyframes gradient{0%{background-position:50% 0%}50%{background-position:50% 100%}to{background-position:50% 0%}}@keyframes pulsebot{0%{transform:scale(1)}50%{transform:scale(1.3)}to{transform:scale(1)}}.bot-listening{height:100%;background:transparent}.bot-listening:before{content:\"\";position:absolute;top:-60vw;left:-80vw;width:150vw;height:150vw;border-radius:50%;background:transparent}.bot-listening:after{content:\"\";position:absolute;top:-40vw;left:-50vw;width:90vw;height:90vw;border-radius:50%;background:transparent}@media screen and (min--moz-device-pixel-ratio:0){.m-carl-notification{transform:translate(0)!important}}.m-carl-notification{position:relative;top:50%}.m-carl-notification .m-cue{width:168px;height:168px;margin:0 auto 50px;display:flex;justify-content:center;align-items:center}.m-carl-notification .m-cue .a-cue-icon{position:absolute;width:100px;height:100px;transform:translate(5px) translateY(5px);border-radius:50%;background:radial-gradient(circle at 50% 50%,#9D107D 1px,#9D107D 3%,#580b58 60%);box-shadow:0 0 10px 5px #00000040;animation:pulsebot 3.5s ease infinite}.m-carl-notification .m-cue .a-cue-voice{transform-origin:center center;height:130px;width:130px;position:absolute;display:flex;justify-content:center;align-items:center}.m-carl-notification .m-cue .a-cue-voice-el{position:absolute;width:130px;height:130px;border-radius:50%;background:#fff;opacity:.2;filter:blur(2px)}.voice1{background:#9A147F!important}.voice2{background:#773691!important}.voice3{background:#4E5CA8!important}.voice4{background:#ABC1F1!important}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(1){animation:hovering 6s ease 0s infinite reverse both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(2){animation:hovering 7s ease 0s infinite both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(3){animation:hovering 8s ease 0s infinite reverse both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(4){animation:hovering 9s ease 0s infinite both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(5){animation:hovering 10s ease 0s infinite reverse both}.m-carl-notification .m-cue .speaking{animation:pulse 2s ease 0s infinite}.m-carl-notification .a-caption{color:#fff;font-size:1.5em;line-height:1.8em;text-shadow:0px 1px 2px rgba(0,0,0,.26);text-align:center}.m-carl-notification .a-caption.speaking{text-shadow:0px 0px 0px;opacity:.4}@keyframes hovering{0%{transform:rotate(0) translate(18px) rotate(0)}to{transform:rotate(360deg) translate(18px) rotate(-360deg)}}@keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.15)}15%{transform:scale(1.25)}20%{transform:scale(1.05)}30%{transform:scale(1.3)}40%{transform:scale(1)}50%{transform:scale(1.25)}55%{transform:scale(1.1)}60%{transform:scale(1)}65%{transform:scale(1.3)}70%{transform:scale(1.2)}80%{transform:scale(1.15)}90%{transform:scale(1.25)}to{transform:scale(1.05)}}\n"], components: [{ type: i4.FirstVisitComponent, selector: "bot-first-visit", inputs: ["firstUsageStory", "assets"], outputs: ["ready"] }, { type: i5.CustomCheckboxCalendarComponent, selector: "custom-checkbox-calendar", inputs: ["calendarTemplate", "columnOverride", "state"], outputs: ["calendarChange"] }, { type: i6.NowboardIconComponent, selector: "nb-icon", inputs: ["size", "primary", "disabled_color", "disabled", "icon"] }], directives: [{ type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i8.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i8.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }], pipes: { "safeHtml": i9.SafeHtmlPipe }, animations: [FadeSlideInOut, FadeSlideInOutKonversoOpacityOut, FadeSlideInOutKonversoTranslateOut] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: DesktopFullScreenComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bot-full-screen', animations: [FadeSlideInOut, FadeSlideInOutKonversoOpacityOut, FadeSlideInOutKonversoTranslateOut], template: "<!--<div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"-->\r\n\r\n  <!--<canvas class=\"orb-canvas\"></canvas>\r\n  <div class=\"overlay\">\r\n    <div class=\"overlay__inner\">\r\n    </div>\r\n  </div>-->\r\n  <div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"\r\n     xmlns=\"http://www.w3.org/1999/html\">\r\n  <div class=\"bot-view\">\r\n    <ng-container *ngIf=\"firstVisit && firstUsageStory\">\r\n      <bot-first-visit [firstUsageStory]=\"firstUsageStory\" [assets]=\"assets\"\r\n                       (ready)=\"emit($event)\"></bot-first-visit>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!firstVisit || !firstUsageStory\">\r\n      <button (click)=\"byPassUserInput('exit', 0)\" id=\"exit-btn\" style=\"display: none;\"></button>\r\n\r\n      <div class=\"bot-assistant-wrapper\" *ngIf=\"AssistantMode\">\r\n        <!-- TODO do we need id, remove it? -->\r\n        <!--<div *ngIf=\"!botListening\" class=\"bot-logo\" id=\"botlogo\">\r\n          <img [src]=\"assets.FullSizeLogo\">\r\n        </div>-->\r\n        <!--<div [ngStyle]=\"{'height': '40%'}\" class=\"bot-logo bot-listening\">\r\n          <div [ngStyle]=\"{'transform': 'translateY(-10vh)'}\" class=\"m-carl-notification\">\r\n            <div class=\"m-carl-notification-cue m-cue\">\r\n              <div *ngIf=\"botListening\" class=\"a-cue-voice\" id=\"bot\">\r\n                <div class=\"a-cue-voice-el voice1\"></div>\r\n                <div class=\"a-cue-voice-el voice2\"></div>\r\n                <div class=\"a-cue-voice-el voice3\"></div>\r\n                <div class=\"a-cue-voice-el voice4\"></div>\r\n                <div class=\"a-cue-voice-el\"></div>\r\n              </div>\r\n              <div class=\"a-cue-icon\" id=\"bot-icon\"></div>\r\n            </div>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" [ngStyle]=\"{'height': '40%'}\" class=\"bot\">\r\n          <div class=\"circle1\"></div>\r\n          <div class=\"circle2\"></div>\r\n          <div class=\"circle3\"></div>\r\n        </div>\r\n        <div  class=\"bot-discussion-wrapper\" style=\"min-height: 60%; max-height: 60%; height: 60%; /*max-height: 120px;*/\">\r\n\r\n          <ng-container *ngIf=\"LastUserInput && !afterProcess\">\r\n            <div [@fadeSlideInOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\"  class=\"user-input\" *ngIf=\"LastUserInput && LastUserInput?.message != ''\">\r\n              <div class=\"data\" [style]=\"{\r\n                     color : assets?.ColorSet?.Secondary\r\n                    }\" [innerHTML]=\"LastUserInput.message\">\r\n              </div>\r\n              <span class=\"time\">{{LastUserInput.date}}</span>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <!-- BOT ANSWER -->\r\n          <ng-container *ngIf=\"LastBotAnswer\">\r\n            <div class=\"position-relative bot-answer\">\r\n\r\n              <div class=\"d-flex flex-column w-100 position-relative bot-answer__text\">\r\n              <!-- BOT ANSWER TEXT -->\r\n              <ng-container *ngIf=\"LastBotAnswer.text\">\r\n\r\n                <!--<span *ngIf=\"!LastBotAnswer.text.includes('loading-dots')\" id=\"text\"></span><br>\r\n                <span *ngIf=\"changed && LastBotAnswer.text.includes('loading-dots')\" class=\"fade\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span><br>\r\n                -->\r\n\r\n                <ng-container *ngIf=\"!LastBotAnswer.text.includes('loading-dots') && changed && showText\">\r\n                  <span [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\" class=\"w-100 justify-content-center\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!afterProcess\">\r\n                  <span id=\"loading-creation\"></span>\r\n                </ng-container>\r\n              </ng-container>\r\n              </div>\r\n\r\n              <ng-container *ngIf=\"LastBotAnswer.medias && LastBotAnswer.medias.length\r\n                && LastBotAnswer.medias[0].required_actions\r\n                && LastBotAnswer.medias[0].required_actions.length > 0\r\n                && !LastBotAnswer.text.includes('loading-dots')\">\r\n                <div class=\"mt35 d-flex justify-content-center w-100 position-relative bot-answer__buttons\">\r\n                  <ng-container *ngFor=\"let suggest of LastBotAnswer.medias[0].required_actions; let i = index\">\r\n                    <ng-container *ngIf=\"suggest.format === 'button'\">\r\n                        <button\r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"\r\n                          *ngIf=\"suggest.value?.title == 'Terminer' && changed || suggest.value?.title == 'Quit' && changed\" [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"  \r\n                          class=\"bot-button bot-button-left show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                        </button>\r\n                        <button \r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"\r\n                          *ngIf=\"suggest.value?.title == 'Nouvelle Demande' && changed || suggest.value?.title == 'New Request' && changed\" [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"  \r\n                          class=\"bot-button bot-button-right show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                        </button>\r\n                        <button\r\n                          [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\"  \r\n                          *ngIf=\"suggest.value?.title && suggest.value?.title != 'Terminer' && suggest.value?.title != 'Quit' && suggest.value?.title != 'Nouvelle Demande' && suggest.value?.title != 'New Request' && changed\"\r\n                            [style]=\"{\r\n                            borderColor : assets?.ColorSet?.Primary,\r\n                            color : assets?.ColorSet?.Primary\r\n                          }\"   \r\n                          class=\"bot-button bot-button-grey show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"                    \r\n                          [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\r\n                      </button>\r\n                    </ng-container>                  \r\n                  </ng-container>\r\n                </div>\r\n                <ng-container *ngIf=\"disableUserInput\">\r\n                  <div class=\"position-relative bot-answer__disable-input\">\r\n                    <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -100)\" class=\"bot-input-disable\">\r\n                      <i>{{ select }}</i>\r\n                    </div>     \r\n                  </div>\r\n                </ng-container>  \r\n              </ng-container>\r\n              <!-- BOT ANSWER BUTTONS -->\r\n\r\n              <!--<ng-container *ngIf=\"afterProcess && config.AfterProcessScenario.FormElements.length > 0\">\r\n                <div class=\"after-process-form\">\r\n                  <div class=\"after-process-subform\" *ngFor=\"let formElements of config.AfterProcessScenario.FormElements\">\r\n                    <ng-container *ngFor=\"let form of formElements\">\r\n                      <ng-container [ngSwitch]=\"form.type\">\r\n                        <div *ngSwitchCase=\"'checkbox'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\" class=\"bot-checkbox\">\r\n                          <input [checked]=\"form?.checked == true ? 'true': 'false'\" [id]=\"form?.id\" [name]=\"form?.id\" [type]='form?.type' value=\"false\">\r\n                          <label [for]=\"form?.id\" class=\"bot-checkbox-label\">\r\n                            {{ translate.translate(service.locale, form.label) }}\r\n                          </label>\r\n                        </div>\r\n\r\n                        <input [class]=\"form?.class\" [id]=\"form?.id\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\" *ngSwitchCase=\"'text'\" \r\n                        [pattern]=\"form?.pattern\" [placeholder]=\"form?.placeholder\" [type]=\"form?.type\" \r\n                        [value]=\"form?.value\">\r\n\r\n                        <div [class]=\"form?.class\" *ngSwitchCase=\"'div'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\">\r\n                          {{ translate.translate(service.locale, form?.content) }}\r\n                        </div>\r\n\r\n                        <textarea [class]=\"form?.class\" [id]=\"form?.id\" *ngSwitchCase=\"'textarea'\" [ngStyle]=\"{'display': form?.display ? form.display: 'block'}\"\r\n                        [placeholder]=\"translate.translate(service.locale, form?.placeholder)\"></textarea>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </ng-container>-->\r\n\r\n              <custom-checkbox-calendar\r\n                [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\"\r\n                *ngIf=\"afterProcess\"\r\n                [state]=\"afterProcess\"\r\n                (calendarChange)=\"bindCalendar($event)\"\r\n                [calendarTemplate]=\"calendarTemplate\"\r\n                [columnOverride]=\"calendarKeyOverride\">\r\n              </custom-checkbox-calendar>\r\n\r\n              <ng-container *ngIf=\"inputType === 'number'\">\r\n                <div [@FadeSlideInOutKonversoOpacityOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" class=\"bot-input\">\r\n                                  <!--<input [type]=\"inputType\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" min=\"2\" [max]=\"inputLimit\"\r\n                       [placeholder]=\"currentPlaceHolder\">-->\r\n                  <div class=\"input-number-div\">\r\n                    <div class=\"input-number-div-arrow\">\r\n                      <button (click)=\"changeNumber(1)\" class=\"arrow-up\">\r\n                        <nb-icon [icon]=\"'up_2'\" [size]=\"1.5\"></nb-icon>\r\n                      </button>\r\n\r\n                      <button (click)=\"changeNumber(-1)\" class=\"arrow-down\">\r\n                        <nb-icon [icon]=\"'down_2'\" [size]=\"1.5\"></nb-icon>\r\n                      </button>\r\n                    </div>\r\n\r\n                    {{ userInput }}\r\n                  </div>\r\n\r\n                  <div class=\"bot-container-btn\">\r\n                    <button class=\"bot-button send-btn input-number-btn\" [style]=\"{\r\n                      backgroundColor : assets?.ColorSet?.Primary,\r\n                      color : assets?.ColorSet?.Secondary\r\n                  }\" (click)=\"_send()\" [disabled]=\"!userInput\">\r\n    \r\n                      <ng-container *ngIf=\"inputType === 'number'\">\r\n                        {{ sendBtn }}\r\n                      </ng-container>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <div class=\"position-relative bot-input-wrapper\">\r\n            <ng-container *ngIf=\"afterProcess && config.AfterProcessScenario.FormButtons.length > 0\">\r\n              <!--<button [class]=\"btn.class\" *ngFor=\"let btn of config.AfterProcessScenario.FormButtons\" [ngStyle]=\"{'display': btn?.display ? btn.display: 'block'}\">\r\n                {{ translate.translate(service.locale, btn.label) }}\r\n              </button>-->\r\n              <button (click)=\"getCalendar()\" class=\"primary rounded validate-after-btn\" style=\"display: inline-block;\">\r\n                {{ translate.translate(service.locale, 'VALIDATE_AVAILABILITY') }}\r\n              </button>\r\n\r\n              <button class=\"rounded secondary skip-after-btn\" style=\"display: inline-block;\">\r\n                {{ translate.translate(service.locale, 'SKIP') }}\r\n              </button>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"!disableUserInput && showInput\">\r\n              <div class=\"d-flex flex-column w-100 position-realtive bot-input\" id=\"bot-input-div\">\r\n                <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, -25)\" class=\"w-100 h-100 d-flex flex-column position-absolute bot-input__controls\">\r\n                  <ng-container *ngIf=\"inputType === 'text'\">\r\n                    <textarea [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" [maxlength]=\"inputLimit\"\r\n                      [placeholder]=\"currentPlaceHolder\"></textarea>\r\n                  </ng-container>\r\n\r\n                  <div *ngIf=\"inputType !== 'number'\" class=\"bot-container-btn\">\r\n                    <button class=\"bot-button send-btn\" [style]=\"{\r\n                      backgroundColor : assets?.ColorSet?.Primary,\r\n                      color : assets?.ColorSet?.Secondary}\" \r\n                      (click)=\"_send()\" \r\n                      [disabled]=\"!userInput\">\r\n                  \r\n                      <ng-container *ngIf=\"inputType !== 'number'\">\r\n                        {{ sendBtnMsg }}\r\n                      </ng-container>\r\n    \r\n                      <!--<ng-container *ngIf=\"inputType === 'number'\">\r\n                        {{ sendBtn }}\r\n                      </ng-container>-->\r\n                    </button>\r\n    \r\n                    <button *ngIf=\"inputType !== 'number' && IsMobile\" class=\"bot-button-screen\">\r\n                      <nb-icon [icon]=\"'scan_11'\" [size]=\"1.5\"></nb-icon>\r\n                      {{ btnScreen }}\r\n                    </button>\r\n    \r\n                    <button *ngIf=\"inputType !== 'number'\" class=\"bot-button-attach\">\r\n                      {{ fileNb }}\r\n    \r\n                      <ng-container *ngIf=\"fileNb <= 1\">\r\n                        {{ translate.translate(service.locale, 'ATTACHMENT') }}\r\n                      </ng-container>\r\n    \r\n                      <ng-container *ngIf=\"fileNb > 1\">\r\n                        {{ translate.translate(service.locale, 'ATTACHMENTS') }}\r\n                      </ng-container>\r\n    \r\n                      <nb-icon [icon]=\"'attachment'\" [size]=\"1.5\"></nb-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>  \r\n            </ng-container>\r\n            \r\n            <!-- TODO remove it -->\r\n            <!-- <ng-container *ngIf=\"disableUserInput\">\r\n              <div class=\"bot-input-disable\">\r\n                <i>{{ select }}</i>\r\n               </div>   \r\n            </ng-container> -->\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"bot-chat-wrapper\" *ngIf=\"!AssistantMode\">\r\n        {{AssistantMode}}\r\n        <div class=\"bot-discussion-wrapper\" #scrollMe [scrollTop]=\"scrollMe.scrollTo(0, 9999999)\">\r\n          <div class=\"bot-chat\">\r\n            <ng-container *ngFor=\"let entry of displayData\">\r\n              <ng-container *ngIf=\"entry.date\">\r\n                <div [@FadeSlideInOutKonversoTranslateOut]=\"animations.FadeSlideInOut(animationTTX, animationSlideValue)\" class=\"user-input\">\r\n                  <div class=\"data\" [style]=\"{\r\n                     backgroundColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Secondary\r\n                    }\" [innerHTML]=\"entry.message\">\r\n                  </div>\r\n                  <span class=\"time\">{{entry.date}}</span>\r\n                </div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"!entry.date\">\r\n                <div class=\"bot-answer\">\r\n                  <ng-container *ngIf=\"entry.text\">\r\n                    <span *ngIf=\"changed\" class=\"\" [innerHTML]=\"entry.text | safeHtml\"></span>\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"entry.medias && entry.medias.length\r\n                   && entry.medias[0].required_actions\r\n                   && entry.medias[0].required_actions.length\">\r\n                    <ng-container *ngFor=\"let suggest of entry.medias[0].required_actions\">\r\n                      <ng-container *ngIf=\"suggest.format === 'button'\">\r\n                        <button *ngIf=\"changed\" [style]=\"{\r\n                     borderColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Primary\r\n            }\" class=\"bot-button\" (click)=\"byPassUserInput(suggest?.value?.onClick)\"\r\n                                [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \"></button>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </ng-container>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"bot-input-wrapper\">\r\n          <div class=\"bot-input\" *ngIf=\"!disableUserInput && showInput\">\r\n            <input type=\"text\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" maxlength=\"200\"\r\n                   [placeholder]=\"currentPlaceHolder\">\r\n            <button *ngIf=\"changed\" class=\"bot-button\" [style]=\"{\r\n                     backgroundColor : assets?.ColorSet?.Primary,\r\n                     color : assets?.ColorSet?.Secondary\r\n            }\" (click)=\"_send()\" [disabled]=\"!userInput\">{{ sendBtn }}\r\n            </button>\r\n          </div>\r\n          <div class=\"bot-input-disable\" *ngIf=\"disableUserInput\">\r\n            <i>{{ select }}</i>\r\n          </div>\r\n        </div>\r\n        <div class=\"bot-logo\">\r\n          <img [src]=\"assets.FullSizeLogo\">\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </div>\r\n</div>\r\n", styles: ["@keyframes gradient{0%{background-position:50% 0%}50%{background-position:50% 100%}to{background-position:50% 0%}}@keyframes pulsebot{0%{transform:scale(1)}50%{transform:scale(1.3)}to{transform:scale(1)}}.bot-listening{height:100%;background:transparent}.bot-listening:before{content:\"\";position:absolute;top:-60vw;left:-80vw;width:150vw;height:150vw;border-radius:50%;background:transparent}.bot-listening:after{content:\"\";position:absolute;top:-40vw;left:-50vw;width:90vw;height:90vw;border-radius:50%;background:transparent}@media screen and (min--moz-device-pixel-ratio:0){.m-carl-notification{transform:translate(0)!important}}.m-carl-notification{position:relative;top:50%}.m-carl-notification .m-cue{width:168px;height:168px;margin:0 auto 50px;display:flex;justify-content:center;align-items:center}.m-carl-notification .m-cue .a-cue-icon{position:absolute;width:100px;height:100px;transform:translate(5px) translateY(5px);border-radius:50%;background:radial-gradient(circle at 50% 50%,#9D107D 1px,#9D107D 3%,#580b58 60%);box-shadow:0 0 10px 5px #00000040;animation:pulsebot 3.5s ease infinite}.m-carl-notification .m-cue .a-cue-voice{transform-origin:center center;height:130px;width:130px;position:absolute;display:flex;justify-content:center;align-items:center}.m-carl-notification .m-cue .a-cue-voice-el{position:absolute;width:130px;height:130px;border-radius:50%;background:#fff;opacity:.2;filter:blur(2px)}.voice1{background:#9A147F!important}.voice2{background:#773691!important}.voice3{background:#4E5CA8!important}.voice4{background:#ABC1F1!important}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(1){animation:hovering 6s ease 0s infinite reverse both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(2){animation:hovering 7s ease 0s infinite both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(3){animation:hovering 8s ease 0s infinite reverse both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(4){animation:hovering 9s ease 0s infinite both}.m-carl-notification .m-cue .a-cue-voice-el:nth-child(5){animation:hovering 10s ease 0s infinite reverse both}.m-carl-notification .m-cue .speaking{animation:pulse 2s ease 0s infinite}.m-carl-notification .a-caption{color:#fff;font-size:1.5em;line-height:1.8em;text-shadow:0px 1px 2px rgba(0,0,0,.26);text-align:center}.m-carl-notification .a-caption.speaking{text-shadow:0px 0px 0px;opacity:.4}@keyframes hovering{0%{transform:rotate(0) translate(18px) rotate(0)}to{transform:rotate(360deg) translate(18px) rotate(-360deg)}}@keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.15)}15%{transform:scale(1.25)}20%{transform:scale(1.05)}30%{transform:scale(1.3)}40%{transform:scale(1)}50%{transform:scale(1.25)}55%{transform:scale(1.1)}60%{transform:scale(1)}65%{transform:scale(1.3)}70%{transform:scale(1.2)}80%{transform:scale(1.15)}90%{transform:scale(1.25)}to{transform:scale(1.05)}}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.TranslateService }, { type: i2.KonversoService }, { type: i3.AnimationsService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: ['__NgxKonverso__']
                }] }]; }, propDecorators: { AssistantMode: [{
                type: Input
            }], assets: [{
                type: Input
            }], firstVisit: [{
                type: Input
            }], firstUsageStory: [{
                type: Input
            }], displayData: [{
                type: Input
            }], disableUserInput: [{
                type: Input
            }], LastUserInput: [{
                type: Input
            }], LastBotAnswer: [{
                type: Input
            }], PlaceHolder: [{
                type: Input
            }], IsMobile: [{
                type: Input
            }], showInput: [{
                type: Input
            }], NumberPlaceHolder: [{
                type: Input
            }], afterProcess: [{
                type: Input
            }], fileNb: [{
                type: Input
            }], readySend: [{
                type: Output
            }], send: [{
                type: Output
            }], sendBotCommand: [{
                type: Output
            }], sendEvent: [{
                type: Output
            }], sendCalendar: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,