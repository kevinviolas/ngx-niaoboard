/***********************************************************
 **  @project ngx-konverso                              **
 **  @file KonversoInterface                                         **
 **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **
 **  @Date 30/03/2021                                         **
 ***********************************************************/
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS29udmVyc29JbnRlcmZhY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9rb252ZXJzby9zcmMvaW50ZXJmYWNlL0tvbnZlcnNvSW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs2REFLNkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqKiAgQHByb2plY3Qgbmd4LWtvbnZlcnNvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKipcbiAqKiAgQGZpbGUgS29udmVyc29JbnRlcmZhY2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqXG4gKiogIEBhdXRob3IgQnJpY2UgRGF1cGlhcmQgPGJyaWNlLmRhdXBpYXJkQHNtYXJ0aWl6LmNvbT4gICoqXG4gKiogIEBEYXRlIDMwLzAzLzIwMjEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cblxuaW50ZXJmYWNlIFdpbGRDYXJkT2JqZWN0QXJyYXkge1xuICAgIFtpbmRleDogc3RyaW5nXTogYW55W107IC8vIGtleSBzaG91bGQgYmUgbGFuZ3VhZ2Ugc2V0dGluZ1xufVxuXG4vKipcbiAqICBCb3QgSW5pdCBtZXNzYWdlXG4gKiAgQEZpcnN0VXNhZ2UgeyBlbiA6IFtcbiAqICAgICAgICAgICdIZWxsbyBpbSBCb3RtYW4gaSBjYW4gaGVscCB5b3UnLFxuICogICAgICAgICAgJ1lvdSBjYW4gYXNrIG1lIGFueXRoaW5nJyxcbiAqICAgICAgICAgICdGb3IgZXhhbXBsZSA6IEkgaGF2ZSBhIHByb2JsZW0gd2l0aCBteSBwbGFudHMnXG4gKiAgICAgICAgIF0sXG4gKiAgICBmciA6IFtcbiAqICAgICAgICAnQm9uam91ciBqZSBzdWlzIGJvdG1hbicsXG4gKiAgICAgICAgJ1R1IHBldXggbWUgZGVtYW5kZXIgY2UgcXVlIHR1IHZldXgnLFxuICogICAgICAgICdQYXIgZXhlbXBsZSA6IG1lcyBwbGFudGVzIG9udCB1biBwcm9ibMOobWUnXG4gKiAgICAgICAgXVxuICogIH07IEZpcnN0IG1lc3NhZ2UgKHR5cGUgc3RlcHBlcilcbiAqXG4gKiAgQFdlbGNvbWUgIHtcbiAqICAgICAgZW4gOiAnSGkgSmVhbiwgaW0gZ2xhZCB0byBzZWUgeW91LCB3aGF0IGNhbiBpIGRvIGZvciB5b3UgPycsXG4gKiAgICAgIGZyIDogJ0JvbmpvdXIsIHJhdmlzIGRlIHRlIHJldm9pciwgcXVlIHB1aXMtamUgZmFpcmUgcG91ciB0b2knXG4gKiAgICB9IFdlbGNvbWUgbWVzc2FnZSBzaW1wbGUgc3RyaW5nXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQm90SW5pdE1lc3NhZ2Uge1xuICAgIEZpcnN0VXNhZ2U/OiBXaWxkQ2FyZE9iamVjdEFycmF5O1xuICAgIFdlbGNvbWU/OiBXaWxkQ2FyZE9iamVjdDtcbn1cblxuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yU2V0IHtcbiAgICBQcmltYXJ5Pzogc3RyaW5nO1xuICAgIFNlY29uZGFyeT86IHN0cmluZztcbiAgICBEZWZhdWx0Pzogc3RyaW5nO1xufVxuXG4vKipcbiAqIERlZmF1bHQgQXNzZXRzXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBEZWZhdWx0QXNzZXRzIHtcbiAgICBGdWxsU2l6ZUxvZ28/OiBzdHJpbmc7XG4gICAgU21hbGxTaXplTG9nbz86IHN0cmluZztcbiAgICBCYWNrZ3JvdW5kPzogc3RyaW5nO1xuICAgIENvbG9yU2V0PzogQ29sb3JTZXQ7XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIHNldHRpbmcgZm9yUm9vdCBLb252ZXJzb1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEtvbnZlcnNvSW50ZXJmYWNlIHtcbiAgICBlbmRwb2ludDogc3RyaW5nOyAgLy8gQXBpIEVudHJ5IGVuZHBvaW50IG9yIFByb3h5XG4gICAgdG9rZW4/OiBzdHJpbmc7IC8vIEJlYXJlciB0b2tlblxuICAgIGF1dGg/OiBib29sZWFuOyAvLyBXaWxsIGluamVjdCB1c2VyIGRhdGEgdG8gYm90IGNvbXBvbmVudCBvbiB1c2VyIHNpZ24gaW5cbiAgICBsYW5nPzogc3RyaW5nOyAvLyBjdXJyZW50bHkgYXZhaWxhYmxlIGxhbmd1YWdlIChjYW4gYmUgdXBkYXRlKSxcbiAgICBDdXN0b21XZWxjb21lPzogYm9vbGVhbjtcbiAgICBkZWZhdWx0QXNzZXRzPzogRGVmYXVsdEFzc2V0cztcbiAgICBCb3RJbml0TWVzc2FnZT86IEJvdEluaXRNZXNzYWdlO1xuICAgIEFzc2lzdGFudE1vZGU/OiBib29sZWFuO1xuICAgIElucHV0UGxhY2VIb2xkZXI6IFdpbGRDYXJkT2JqZWN0QXJyYXk7XG4gICAgSW5wdXROdW1iZXJQbGFjZUhvbGRlcjogV2lsZENhcmRPYmplY3RBcnJheTtcbiAgICBBZnRlclByb2Nlc3M6IGJvb2xlYW47XG4gICAgQWZ0ZXJQcm9jZXNzU2NlbmFyaW86IGFueTtcbiAgICBNb2RhbEF0dGFjaG1lbnRUZXh0OiB7XG4gICAgICAgIGZyOiB7XG4gICAgICAgICAgICBTRU5EX01FX1lPVVJfQVRUQUNITUVOVFM6IHN0cmluZyxcbiAgICAgICAgICAgIERST1BfUEhPVE86IHN0cmluZyxcbiAgICAgICAgICAgIElfRklOSVNIRUQ6IHN0cmluZ1xuICAgICAgICB9LFxuICAgICAgICBlbjoge1xuICAgICAgICAgICAgU0VORF9NRV9ZT1VSX0FUVEFDSE1FTlRTOiBzdHJpbmcsXG4gICAgICAgICAgICBEUk9QX1BIT1RPOiBzdHJpbmcsXG4gICAgICAgICAgICBJX0ZJTklTSEVEOiBzdHJpbmdcbiAgICAgICAgfVxuICAgIH0sXG59XG5cbi8qKlxuICogIEludGVmYWNlIHNldHRpbmcgZm9yIGF1dGhlbnRpY2F0aW9uXG4gKiAgQHVzZXJJZDogc3RyaW5nOyAgLy8gdW5pcXVlIHVzZXIgSUQgKGFueSB0eXBlIG9mIGZvcm1hdCBhY2NlcHRlZClcbiAqICBAbGFuZzogc3RyaW5nOyAvLyAyIGRpZ2l0cyBsYW5ndWFnZSB1c2VkIChsaWtlIFwiZnJcIiwgXCJlblwiLCBldGMuKVxuICogIEBsb2NhdGlvbj86IHN0cmluZzsgLy8gc2ltcGxlIGFkZHJlc3Mgc3RyaW5nXG4gKiAgQGZpcnN0VmlzaXQ/OmJvb2xlYW47IC8vIGVuYWJsZSBmaXJzdCB2aXNpdGUgbWVzc2FnZSBpZiBpcyBzZXQgdG8gdHJ1ZVxuICogIEBbaW5kZXg6IHN0cmluZ106IHN0cmluZzsgLy8gQWxsIG90aGVyIHN0dWZmIHB1dCBoZXJlIGZvciBib3Qga25vd2xlZGdlO1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEtvbnZlcnNvVXNlciB7XG4gICAgdXNlcklkOiBzdHJpbmc7XG4gICAgbGFuZzogc3RyaW5nO1xuICAgIGxvY2F0aW9uPzogc3RyaW5nO1xuICAgIGZpcnN0VmlzaXQ/OiBhbnk7XG5cbiAgICBbaW5kZXg6IHN0cmluZ106IGFueTtcbn1cblxuXG4vKipcbiAqICBJbnRlZmFjZSBRdWVyeSBLb252ZXJzb1xuICovXG5cbmV4cG9ydCBpbnRlcmZhY2UgS29udmVyc29RdWVyeSB7XG4gICAgdXNlcklkOiBzdHJpbmc7XG4gICAgbGFuZzogc3RyaW5nO1xuICAgIHF1ZXJ5OiBzdHJpbmc7XG4gICAgaXNTZW5kaW5nOiB0cnVlO1xuXG4gICAgW2luZGV4OiBzdHJpbmddOiBhbnk7XG59XG5cbi8qKlxuICogIE9wZW5DaGF0Qm90IEFuc3dlciBJbnRlcmZhY2VzXG4gKiAgVGhpcyBmb2xsb3dpbmcgaW50ZXJmYWNlIGlzIGJhc2VkIG9uIGh0dHBzOi8vb3BlbmNoYXRib3QuaW8vc3dhZ2dlci9zd2FnZ2VyLmh0bWwjL2RlZmF1bHQvYXNrX2NoYXRib3RcbiAqL1xuaW50ZXJmYWNlIE9wZW5DaGF0Qm90Q2hhbm5lbFBheWxvYWQge1xuICAgIHR5cGU6ICgnaHRtbCcgfCAncGxhaW5UZXh0Jyk7XG4gICAgcGF5bG9hZDogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgT3BlbkNoYXRCb3RDaGFubmVsIHtcbiAgICBtYXJrdXA6IE9wZW5DaGF0Qm90Q2hhbm5lbFBheWxvYWQ7XG4gICAgbWVzc2FnaW5nOiBPcGVuQ2hhdEJvdENoYW5uZWxQYXlsb2FkO1xuICAgIHNtczogT3BlbkNoYXRCb3RDaGFubmVsUGF5bG9hZDtcbiAgICB0dHM6IE9wZW5DaGF0Qm90Q2hhbm5lbFBheWxvYWQ7XG59XG5cbmludGVyZmFjZSBPcGVuQ2hhdEJvdEFjdGlvbiB7XG4gICAgdHlwZTogc3RyaW5nO1xuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIHBheWxvYWQ/OiBzdHJpbmc7XG4gICAgdmFsdWU/OiB7XG4gICAgICAgIG9uQ2xpY2s/OiBzdHJpbmc7XG4gICAgICAgIHRpdGxlPzogc3RyaW5nO1xuICAgICAgICBkaXNwbGF5ZWRNZXNzYWdlOiBzdHJpbmc7XG4gICAgfTtcbn1cblxuaW50ZXJmYWNlIE9wZW5DaGF0Qm90TWVkaWEge1xuICAgIHNob3J0RGVzYzogc3RyaW5nO1xuICAgIGxvbmdEZXNjOiBzdHJpbmc7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBtaW1lVHlwZTogc3RyaW5nO1xuICAgIHNyYzogc3RyaW5nO1xuICAgIHJlcXVpcmVkX2FjdGlvbnM6IE9wZW5DaGF0Qm90QWN0aW9uW107XG4gICAgc3VnZ2VzdGVkX2FjdGlvbnM6IE9wZW5DaGF0Qm90QWN0aW9uW107XG4gICAgZGVmYXVsdF9hY3Rpb25zOiBPcGVuQ2hhdEJvdEFjdGlvbjtcbiAgICBidXR0b25zOiBPcGVuQ2hhdEJvdEFjdGlvbltdO1xufVxuXG5pbnRlcmZhY2UgV2lsZENhcmRPYmplY3Qge1xuICAgIFtpbmRleDogc3RyaW5nXTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9wZW5DaGF0Qm90UmVzcG9uc2Uge1xuICAgIHF1ZXJ5Pzogc3RyaW5nO1xuICAgIHVzZXJJZD86IHN0cmluZztcbiAgICB0aW1lc3RhbXA/OiBudW1iZXI7XG4gICAgdGV4dD86IHN0cmluZztcbiAgICBpbmZvVVJMPzogc3RyaW5nO1xuICAgIGVjaG8/OiB7IHNlc3Npb246IHN0cmluZyB9O1xuICAgIHNjb3JlPzogeyB2YWx1ZTogbnVtYmVyIH07XG4gICAgY2hhbm5lbD86IE9wZW5DaGF0Qm90Q2hhbm5lbDtcbiAgICBtZWRpYXM/OiBbT3BlbkNoYXRCb3RNZWRpYV07XG4gICAgY29udGV4dD86IFdpbGRDYXJkT2JqZWN0W107XG4gICAgc3VnZ2VzdGlvbnM/OiBPcGVuQ2hhdEJvdEFjdGlvbltdO1xuICAgIGVuZE9mVG9waWM/OiBib29sZWFuO1xufVxuXG5pbnRlcmZhY2UgT3BlbkNoYXRCb3RNZXRhIHtcbiAgICB2ZXJzaW9uOiBudW1iZXI7XG4gICAgYm90SWNvbjogc3RyaW5nO1xuICAgIGJvdE5hbWU6IHN0cmluZztcbiAgICBjb3B5cmlnaHQ6IHN0cmluZztcbiAgICBhdXRob3JzOiBzdHJpbmdbXTtcbn1cblxuaW50ZXJmYWNlIE9wZW5DaGF0Qm90U3RhdHVzIHtcbiAgICBjb2RlOiAoMjAwIHwgNDAwKTtcbiAgICBlcnJvclR5cGU6ICgnc3VjY2VzcycgfCAnQmFkIHJlcXVlc3QnKTtcbn1cblxuXG5leHBvcnQgaW50ZXJmYWNlIEtvbnZlcnNvQW5zd2VyIHtcbiAgICByZXNwb25zZT86IE9wZW5DaGF0Qm90UmVzcG9uc2U7XG4gICAgbWV0YTogT3BlbkNoYXRCb3RNZXRhO1xuICAgIHN0YXR1czogT3BlbkNoYXRCb3RTdGF0dXM7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlcklucHV0IHtcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgZGF0ZTogc3RyaW5nO1xuICAgIGVycm9yPzogYm9vbGVhbjtcbn1cbiJdfQ==